{"version":3,"sources":["meteor://ðŸ’»app/packages/shell-server/main.js","meteor://ðŸ’»app/packages/shell-server/shell-server.js"],"names":["module","link","listen","v","shellDir","process","env","METEOR_SHELL_DIR","module1","export","disable","assert","default","pathJoin","join","PassThrough","closeSync","openSync","readFileSync","unlink","writeFileSync","writeSync","createServer","replStart","start","INFO_FILE_MODE","parseInt","EXITING_MESSAGE","callback","Server","Meteor","startup","__meteor_bootstrap__","hooks","startupHooks","push","setImmediate","getInfoFile","JSON","stringify","status","reason","mode","ignored","evalCommandPromise","Promise","resolve","constructor","ok","key","Math","random","toString","slice","server","socket","onConnection","on","err","console","error","stack","infoFile","port","address","timeout","setTimeout","removeAllListeners","end","readJSONFromStream","options","replInputSocket","clearTimeout","columns","Object","assign","create","prompt","terminal","useColors","ignoreUndefined","input","useGlobal","output","evaluateAndExit","startREPL","_wrappedDefaultEval","call","command","global","filename","result","sendResultToSocket","message","code","enableInteractiveMode","repl","context","setRequireAndModule","defaultEval","eval","wrappedDefaultEval","file","Package","ecmascript","ECMAScript","compileForShell","cacheDirectory","getCacheDirectory","then","catch","initializeHistory","defineProperty","get","last","set","val","configurable","addHelp","cmd","helpText","info","commands","help","write","defineCommand","action","sendMessage","exit","historyFile","getHistoryFile","historyFd","historyLines","split","seenLines","history","historyIndex","length","line","pop","test","addListener","inputStream","outputStream","dataSoFar","onData","buffer","lines","shift","json","parse","SyntaxError","finish","pipe","onClose","Error","finished","removeListener","modules","toBeInstalled","shellModuleName","require","exports","extensions","meteorInstall"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAAA,MAAM,CAACC,IAAI,CAAC,mBAAmB,EAAC;EAAC,GAAG,EAAC;AAAG,CAAC,EAAC,CAAC,CAAC;AAAC,IAAIC,MAAM;AAACF,MAAM,CAACC,IAAI,CAAC,mBAAmB,EAAC;EAACC,MAAM,CAACC,CAAC,EAAC;IAACD,MAAM,GAACC,CAAC;EAAA;AAAC,CAAC,EAAC,CAAC,CAAC;AAGhH,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,gBAAgB;AAC7C,IAAIH,QAAQ,EAAE;EACZF,MAAM,CAACE,QAAQ,CAAC;AAClB,C;;;;;;;;;;;;ECNAI,OAAO,CAACC,MAAM,CAAC;IAACP,MAAM,EAAC,MAAIA,MAAM;IAACQ,OAAO,EAAC,MAAIA;EAAO,CAAC,CAAC;EAAC,IAAIC,MAAM;EAACH,OAAO,CAACP,IAAI,CAAC,QAAQ,EAAC;IAACW,OAAO,CAACT,CAAC,EAAC;MAACQ,MAAM,GAACR,CAAC;IAAA;EAAC,CAAC,EAAC,CAAC,CAAC;EAAC,IAAIU,QAAQ;EAACL,OAAO,CAACP,IAAI,CAAC,MAAM,EAAC;IAACa,IAAI,CAACX,CAAC,EAAC;MAACU,QAAQ,GAACV,CAAC;IAAA;EAAC,CAAC,EAAC,CAAC,CAAC;EAAC,IAAIY,WAAW;EAACP,OAAO,CAACP,IAAI,CAAC,QAAQ,EAAC;IAACc,WAAW,CAACZ,CAAC,EAAC;MAACY,WAAW,GAACZ,CAAC;IAAA;EAAC,CAAC,EAAC,CAAC,CAAC;EAAC,IAAIa,SAAS,EAACC,QAAQ,EAACC,YAAY,EAACC,MAAM,EAACC,aAAa,EAACC,SAAS;EAACb,OAAO,CAACP,IAAI,CAAC,IAAI,EAAC;IAACe,SAAS,CAACb,CAAC,EAAC;MAACa,SAAS,GAACb,CAAC;IAAA,CAAC;IAACc,QAAQ,CAACd,CAAC,EAAC;MAACc,QAAQ,GAACd,CAAC;IAAA,CAAC;IAACe,YAAY,CAACf,CAAC,EAAC;MAACe,YAAY,GAACf,CAAC;IAAA,CAAC;IAACgB,MAAM,CAAChB,CAAC,EAAC;MAACgB,MAAM,GAAChB,CAAC;IAAA,CAAC;IAACiB,aAAa,CAACjB,CAAC,EAAC;MAACiB,aAAa,GAACjB,CAAC;IAAA,CAAC;IAACkB,SAAS,CAAClB,CAAC,EAAC;MAACkB,SAAS,GAAClB,CAAC;IAAA;EAAC,CAAC,EAAC,CAAC,CAAC;EAAC,IAAImB,YAAY;EAACd,OAAO,CAACP,IAAI,CAAC,KAAK,EAAC;IAACqB,YAAY,CAACnB,CAAC,EAAC;MAACmB,YAAY,GAACnB,CAAC;IAAA;EAAC,CAAC,EAAC,CAAC,CAAC;EAAC,IAAIoB,SAAS;EAACf,OAAO,CAACP,IAAI,CAAC,MAAM,EAAC;IAACuB,KAAK,CAACrB,CAAC,EAAC;MAACoB,SAAS,GAACpB,CAAC;IAAA;EAAC,CAAC,EAAC,CAAC,CAAC;EAACK,OAAO,CAACP,IAAI,CAAC,gCAAgC,CAAC;EAiBtqB,MAAMwB,cAAc,GAAGC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3C,MAAMC,eAAe,GAAG,kBAAkB;;EAE1C;EACA;EACO,SAASzB,MAAM,CAACE,QAAQ,EAAE;IAC/B,SAASwB,QAAQ,GAAG;MAClB,IAAIC,MAAM,CAACzB,QAAQ,CAAC,CAACF,MAAM,EAAE;IAC/B;;IAEA;IACA;IACA,IAAI,OAAO4B,MAAM,KAAK,QAAQ,EAAE;MAC9BA,MAAM,CAACC,OAAO,CAACH,QAAQ,CAAC;IAC1B,CAAC,MAAM,IAAI,OAAOI,oBAAoB,KAAK,QAAQ,EAAE;MACnD,MAAMC,KAAK,GAAGD,oBAAoB,CAACE,YAAY;MAC/C,IAAID,KAAK,EAAE;QACTA,KAAK,CAACE,IAAI,CAACP,QAAQ,CAAC;MACtB,CAAC,MAAM;QACL;QACAQ,YAAY,CAACR,QAAQ,CAAC;MACxB;IACF;EACF;EAGO,SAASlB,OAAO,CAACN,QAAQ,EAAE;IAChC,IAAI;MACF;MACA;MACA;MACAgB,aAAa,CACXiB,WAAW,CAACjC,QAAQ,CAAC,EACrBkC,IAAI,CAACC,SAAS,CAAC;QACbC,MAAM,EAAE,UAAU;QAClBC,MAAM,EAAE;MACV,CAAC,CAAC,GAAG,IAAI,EACT;QAAEC,IAAI,EAAEjB;MAAe,CAAC,CACzB;IACH,CAAC,CAAC,OAAOkB,OAAO,EAAE,CAAC;EACrB;EAEA;EACA;EACA;EACA,MAAMC,kBAAkB,GAAGC,OAAO,CAACC,OAAO,EAAE;EAE5C,MAAMjB,MAAM,CAAC;IACXkB,WAAW,CAAC3C,QAAQ,EAAE;MACpBO,MAAM,CAACqC,EAAE,CAAC,IAAI,YAAYnB,MAAM,CAAC;MAEjC,IAAI,CAACzB,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAAC6C,GAAG,GAAGC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;MAE9C,IAAI,CAACC,MAAM,GACThC,YAAY,CAAEiC,MAAM,IAAK;QACvB,IAAI,CAACC,YAAY,CAACD,MAAM,CAAC;MAC3B,CAAC,CAAC,CACDE,EAAE,CAAC,OAAO,EAAGC,GAAG,IAAK;QACpBC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACG,KAAK,CAAC;MAC1B,CAAC,CAAC;IACN;IAEA3D,MAAM,GAAG;MACP,MAAM4D,QAAQ,GAAGzB,WAAW,CAAC,IAAI,CAACjC,QAAQ,CAAC;MAE3Ce,MAAM,CAAC2C,QAAQ,EAAE,MAAM;QACrB,IAAI,CAACR,MAAM,CAACpD,MAAM,CAAC,CAAC,EAAE,WAAW,EAAE,MAAM;UACvCkB,aAAa,CAAC0C,QAAQ,EAAExB,IAAI,CAACC,SAAS,CAAC;YACrCC,MAAM,EAAE,SAAS;YACjBuB,IAAI,EAAE,IAAI,CAACT,MAAM,CAACU,OAAO,EAAE,CAACD,IAAI;YAChCd,GAAG,EAAE,IAAI,CAACA;UACZ,CAAC,CAAC,GAAG,IAAI,EAAE;YACTP,IAAI,EAAEjB;UACR,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;IAEA+B,YAAY,CAACD,MAAM,EAAE;MACnB;MACA;MACAA,MAAM,CAACE,EAAE,CAAC,OAAO,EAAE,YAAW;QAC5BF,MAAM,GAAG,IAAI;MACf,CAAC,CAAC;;MAEF;MACA;MACA,MAAMU,OAAO,GAAGC,UAAU,CAAC,YAAW;QACpC,IAAIX,MAAM,EAAE;UACVA,MAAM,CAACY,kBAAkB,CAAC,MAAM,CAAC;UACjCZ,MAAM,CAACa,GAAG,CAACzC,eAAe,GAAG,IAAI,CAAC;QACpC;MACF,CAAC,EAAE,IAAI,CAAC;;MAER;MACA;MACA;MACA;MACA0C,kBAAkB,CAACd,MAAM,EAAE,CAACK,KAAK,EAAEU,OAAO,EAAEC,eAAe,KAAK;QAC9DC,YAAY,CAACP,OAAO,CAAC;QAErB,IAAIL,KAAK,EAAE;UACTL,MAAM,GAAG,IAAI;UACbI,OAAO,CAACC,KAAK,CAACA,KAAK,CAACC,KAAK,CAAC;UAC1B;QACF;QAEA,IAAIS,OAAO,CAACrB,GAAG,KAAK,IAAI,CAACA,GAAG,EAAE;UAC5B,IAAIM,MAAM,EAAE;YACVA,MAAM,CAACa,GAAG,CAACzC,eAAe,GAAG,IAAI,CAAC;UACpC;UACA;QACF;QACA,OAAO2C,OAAO,CAACrB,GAAG;;QAElB;QACA,IAAIqB,OAAO,CAACG,OAAO,IAAIlB,MAAM,EAAE;UAC7BA,MAAM,CAACkB,OAAO,GAAGH,OAAO,CAACG,OAAO;QAClC;QACA,OAAOH,OAAO,CAACG,OAAO;QAEtBH,OAAO,GAAGI,MAAM,CAACC,MAAM,CACrBD,MAAM,CAACE,MAAM,CAAC,IAAI,CAAC;QAEnB;QACA;UACEC,MAAM,EAAE,IAAI;UACZC,QAAQ,EAAE,IAAI;UACdC,SAAS,EAAE,IAAI;UACfC,eAAe,EAAE;QACnB,CAAC;QAED;QACAV,OAAO;QAEP;QACA;UACEW,KAAK,EAAEV,eAAe;UACtBW,SAAS,EAAE,KAAK;UAChBC,MAAM,EAAE5B;QACV,CAAC,CACF;;QAED;QACA;QACA;QACA,IAAIe,OAAO,CAACc,eAAe,EAAE;UAC3Bd,OAAO,CAACO,MAAM,GAAG,EAAE;QACrB;;QAEA;QACA,IAAI,CAACQ,SAAS,CAACf,OAAO,CAAC;QAEvB,IAAIA,OAAO,CAACc,eAAe,EAAE;UAC3B,IAAI,CAACE,mBAAmB,CAACC,IAAI,CAC3Bb,MAAM,CAACE,MAAM,CAAC,IAAI,CAAC,EACnBN,OAAO,CAACc,eAAe,CAACI,OAAO,EAC/BC,MAAM,EACNnB,OAAO,CAACc,eAAe,CAACM,QAAQ,IAAI,gBAAgB,EACpD,UAAU9B,KAAK,EAAE+B,MAAM,EAAE;YACvB,IAAIpC,MAAM,EAAE;cACV,SAASqC,kBAAkB,CAACC,OAAO,EAAE;gBACnC;gBACA;gBACAtC,MAAM,CAACa,GAAG,CAAC9B,IAAI,CAACC,SAAS,CAACsD,OAAO,CAAC,GAAG,IAAI,CAAC;cAC5C;cAEA,IAAIjC,KAAK,EAAE;gBACTgC,kBAAkB,CAAC;kBACjBhC,KAAK,EAAEA,KAAK,CAACR,QAAQ,EAAE;kBACvB0C,IAAI,EAAE;gBACR,CAAC,CAAC;cACJ,CAAC,MAAM;gBACLF,kBAAkB,CAAC;kBACjBD;gBACF,CAAC,CAAC;cACJ;YACF;UACF,CAAC,CACF;UACD;QACF;QACA,OAAOrB,OAAO,CAACc,eAAe;QAE9B,IAAI,CAACW,qBAAqB,CAACzB,OAAO,CAAC;MACrC,CAAC,CAAC;IACJ;IAEAe,SAAS,CAACf,OAAO,EAAE;MACjB;MACA;MACAA,OAAO,CAACa,MAAM,CAAC1B,EAAE,CAAC,OAAO,EAAE,YAAW;QACpCa,OAAO,CAACa,MAAM,GAAG,IAAI;MACvB,CAAC,CAAC;MAEF,MAAMa,IAAI,GAAG,IAAI,CAACA,IAAI,GAAGzE,SAAS,CAAC+C,OAAO,CAAC;MAC3C,MAAM;QAAElE;MAAS,CAAC,GAAG,IAAI;;MAEzB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA4F,IAAI,CAACC,OAAO,GAAGR,MAAM;MACrBO,IAAI,CAACd,SAAS,GAAG,IAAI;MAErBgB,mBAAmB,CAACF,IAAI,CAACC,OAAO,CAAC;;MAEjC;MACA;MACA;MACA;MACA,MAAME,WAAW,GAAGH,IAAI,CAACI,IAAI;MAE7B,SAASC,kBAAkB,CAACP,IAAI,EAAEG,OAAO,EAAEK,IAAI,EAAE1E,QAAQ,EAAE;QACzD,IAAI2E,OAAO,CAACC,UAAU,EAAE;UACtB,IAAI;YACFV,IAAI,GAAGS,OAAO,CAACC,UAAU,CAACC,UAAU,CAACC,eAAe,CAACZ,IAAI,EAAE;cACzDa,cAAc,EAAEC,iBAAiB,CAACxG,QAAQ;YAC5C,CAAC,CAAC;UACJ,CAAC,CAAC,OAAOsD,GAAG,EAAE;YACZ;YACA;YACA;YACA;UAAA;QAEJ;QAEAd,kBAAkB,CACfiE,IAAI,CAAC,MAAMV,WAAW,CAACL,IAAI,EAAEG,OAAO,EAAEK,IAAI,EAAE1E,QAAQ,CAAC,CAAC,CACtDkF,KAAK,CAAClF,QAAQ,CAAC;MACpB;;MAEA;MACA;MACAoE,IAAI,CAACI,IAAI,GAAG,IAAI,CAACd,mBAAmB,GAAGe,kBAAkB;IAC3D;IAEAN,qBAAqB,CAACzB,OAAO,EAAE;MAC7B;MACA,IAAI,CAACyC,iBAAiB,EAAE;MAExB,MAAMf,IAAI,GAAG,IAAI,CAACA,IAAI;;MAEtB;MACA;MACA;MACAtB,MAAM,CAACsC,cAAc,CAAChB,IAAI,CAACC,OAAO,EAAE,IAAI,EAAE;QACxCgB,GAAG,EAAE,MAAMjB,IAAI,CAACkB,IAAI;QACpBC,GAAG,EAAGC,GAAG,IAAK;UACZpB,IAAI,CAACkB,IAAI,GAAGE,GAAG;QACjB,CAAC;QAED;QACA;QACAC,YAAY,EAAE;MAChB,CAAC,CAAC;;MAEF;MACA,SAASC,OAAO,CAACC,GAAG,EAAEC,QAAQ,EAAE;QAC9B,MAAMC,IAAI,GAAGzB,IAAI,CAAC0B,QAAQ,CAACH,GAAG,CAAC,IAAIvB,IAAI,CAAC0B,QAAQ,CAAC,GAAG,GAAGH,GAAG,CAAC;QAC3D,IAAIE,IAAI,EAAE;UACRA,IAAI,CAACE,IAAI,GAAGH,QAAQ;QACtB;MACF;MACAF,OAAO,CAAC,OAAO,EAAE,wDAAwD,CAAC;MAC1EA,OAAO,CAAC,MAAM,EAAE,wCAAwC,CAAC;MACzDA,OAAO,CAAC,MAAM,EAAE,4BAA4B,CAAC;;MAE7C;MACA;MACAtB,IAAI,CAACvC,EAAE,CAAC,MAAM,EAAE,YAAW;QACzB,IAAIa,OAAO,CAACa,MAAM,EAAE;UAClBb,OAAO,CAACa,MAAM,CAACyC,KAAK,CAACjG,eAAe,GAAG,IAAI,CAAC;UAC5C2C,OAAO,CAACa,MAAM,CAACf,GAAG,EAAE;QACtB;MACF,CAAC,CAAC;;MAEF;MACA;MACA/D,OAAO,CAACoD,EAAE,CAAC,MAAM,EAAE,YAAW;QAC5B,IAAIa,OAAO,CAACa,MAAM,EAAE;UAClBb,OAAO,CAACa,MAAM,CAACf,GAAG,EAAE;QACtB;MACF,CAAC,CAAC;;MAEF;MACA;MACA4B,IAAI,CAAC6B,aAAa,CAAC,QAAQ,EAAE;QAC3BF,IAAI,EAAE,kCAAkC;QACxCG,MAAM,EAAE,YAAW;UACjB,IAAIzH,OAAO,CAAC0H,WAAW,EAAE;YACvB1H,OAAO,CAAC0H,WAAW,CAAC,cAAc,EAAE;cAAEvC,OAAO,EAAE;YAAS,CAAC,CAAC;UAC5D,CAAC,MAAM;YACLnF,OAAO,CAAC2H,IAAI,CAAC,CAAC,CAAC;UACjB;QACF;MACF,CAAC,CAAC;IACJ;;IAEA;IACA;IACAjB,iBAAiB,GAAG;MAClB,MAAMf,IAAI,GAAG,IAAI,CAACA,IAAI;MACtB,MAAMiC,WAAW,GAAGC,cAAc,CAAC,IAAI,CAAC9H,QAAQ,CAAC;MACjD,IAAI+H,SAAS,GAAGlH,QAAQ,CAACgH,WAAW,EAAE,IAAI,CAAC;MAC3C,MAAMG,YAAY,GAAGlH,YAAY,CAAC+G,WAAW,EAAE,MAAM,CAAC,CAACI,KAAK,CAAC,IAAI,CAAC;MAClE,MAAMC,SAAS,GAAG5D,MAAM,CAACE,MAAM,CAAC,IAAI,CAAC;MAErC,IAAI,CAAEoB,IAAI,CAACuC,OAAO,EAAE;QAClBvC,IAAI,CAACuC,OAAO,GAAG,EAAE;QACjBvC,IAAI,CAACwC,YAAY,GAAG,CAAC,CAAC;MACxB;MAEA,OAAOxC,IAAI,CAACuC,OAAO,IAAIH,YAAY,CAACK,MAAM,GAAG,CAAC,EAAE;QAC9C,MAAMC,IAAI,GAAGN,YAAY,CAACO,GAAG,EAAE;QAC/B,IAAID,IAAI,IAAI,IAAI,CAACE,IAAI,CAACF,IAAI,CAAC,IAAI,CAAEJ,SAAS,CAACI,IAAI,CAAC,EAAE;UAChD1C,IAAI,CAACuC,OAAO,CAACpG,IAAI,CAACuG,IAAI,CAAC;UACvBJ,SAAS,CAACI,IAAI,CAAC,GAAG,IAAI;QACxB;MACF;MAEA1C,IAAI,CAAC6C,WAAW,CAAC,MAAM,EAAE,UAASH,IAAI,EAAE;QACtC,IAAIP,SAAS,IAAI,CAAC,IAAI,IAAI,CAACS,IAAI,CAACF,IAAI,CAAC,EAAE;UACrCrH,SAAS,CAAC8G,SAAS,EAAEO,IAAI,GAAG,IAAI,CAAC;QACnC;MACF,CAAC,CAAC;MAEF,IAAI,CAAC1C,IAAI,CAACvC,EAAE,CAAC,MAAM,EAAE,YAAW;QAC9BzC,SAAS,CAACmH,SAAS,CAAC;QACpBA,SAAS,GAAG,CAAC,CAAC;MAChB,CAAC,CAAC;IACJ;EACF;EAEA,SAAS9D,kBAAkB,CAACyE,WAAW,EAAElH,QAAQ,EAAE;IACjD,MAAMmH,YAAY,GAAG,IAAIhI,WAAW,EAAE;IACtC,IAAIiI,SAAS,GAAG,EAAE;IAElB,SAASC,MAAM,CAACC,MAAM,EAAE;MACtB,MAAMC,KAAK,GAAGD,MAAM,CAAC9F,QAAQ,CAAC,MAAM,CAAC,CAACiF,KAAK,CAAC,IAAI,CAAC;MAEjD,OAAOc,KAAK,CAACV,MAAM,GAAG,CAAC,EAAE;QACvBO,SAAS,IAAIG,KAAK,CAACC,KAAK,EAAE;QAE1B,IAAIC,IAAI;QACR,IAAI;UACFA,IAAI,GAAG/G,IAAI,CAACgH,KAAK,CAACN,SAAS,CAAC;QAC9B,CAAC,CAAC,OAAOpF,KAAK,EAAE;UACd,IAAIA,KAAK,YAAY2F,WAAW,EAAE;YAChC;UACF;UAEA,OAAOC,MAAM,CAAC5F,KAAK,CAAC;QACtB;QAEA,IAAIuF,KAAK,CAACV,MAAM,GAAG,CAAC,EAAE;UACpBM,YAAY,CAACnB,KAAK,CAACuB,KAAK,CAACrI,IAAI,CAAC,IAAI,CAAC,CAAC;QACtC;QAEAgI,WAAW,CAACW,IAAI,CAACV,YAAY,CAAC;QAE9B,OAAOS,MAAM,CAAC,IAAI,EAAEH,IAAI,CAAC;MAC3B;IACF;IAEA,SAASK,OAAO,GAAG;MACjBF,MAAM,CAAC,IAAIG,KAAK,CAAC,4BAA4B,CAAC,CAAC;IACjD;IAEA,IAAIC,QAAQ,GAAG,KAAK;IACpB,SAASJ,MAAM,CAAC5F,KAAK,EAAEyF,IAAI,EAAE;MAC3B,IAAI,CAAEO,QAAQ,EAAE;QACdA,QAAQ,GAAG,IAAI;QACfd,WAAW,CAACe,cAAc,CAAC,MAAM,EAAEZ,MAAM,CAAC;QAC1CH,WAAW,CAACe,cAAc,CAAC,OAAO,EAAEL,MAAM,CAAC;QAC3CV,WAAW,CAACe,cAAc,CAAC,OAAO,EAAEH,OAAO,CAAC;QAC5C9H,QAAQ,CAACgC,KAAK,EAAEyF,IAAI,EAAEN,YAAY,CAAC;MACrC;IACF;IAEAD,WAAW,CAACrF,EAAE,CAAC,MAAM,EAAEwF,MAAM,CAAC;IAC9BH,WAAW,CAACrF,EAAE,CAAC,OAAO,EAAE+F,MAAM,CAAC;IAC/BV,WAAW,CAACrF,EAAE,CAAC,OAAO,EAAEiG,OAAO,CAAC;EAClC;EAEA,SAASrH,WAAW,CAACjC,QAAQ,EAAE;IAC7B,OAAOS,QAAQ,CAACT,QAAQ,EAAE,WAAW,CAAC;EACxC;EAEA,SAAS8H,cAAc,CAAC9H,QAAQ,EAAE;IAChC,OAAOS,QAAQ,CAACT,QAAQ,EAAE,SAAS,CAAC;EACtC;EAEA,SAASwG,iBAAiB,CAACxG,QAAQ,EAAE;IACnC,OAAOS,QAAQ,CAACT,QAAQ,EAAE,OAAO,CAAC;EACpC;EAEA,SAAS8F,mBAAmB,CAACD,OAAO,EAAE;IACpC,IAAIM,OAAO,CAACuD,OAAO,EAAE;MACnB;MACA;MACA,MAAMC,aAAa,GAAG,CAAC,CAAC;MACxB,MAAMC,eAAe,GAAG,eAAe,GACrC9G,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK;MAE7C0G,aAAa,CAACC,eAAe,CAAC,GAAG,UAAUC,OAAO,EAAEC,OAAO,EAAElK,MAAM,EAAE;QACnEiG,OAAO,CAACjG,MAAM,GAAGA,MAAM;QACvBiG,OAAO,CAACgE,OAAO,GAAGA,OAAO;;QAEzB;QACA;QACAA,OAAO,CAACE,UAAU,GAAG;UACnB,KAAK,EAAE,IAAI;UACX,OAAO,EAAE,IAAI;UACb,OAAO,EAAE;QACX,CAAC;MACH,CAAC;;MAED;MACA;MACA5D,OAAO,CAACuD,OAAO,CAACM,aAAa,CAACL,aAAa,CAAC,CAAC,IAAI,GAAGC,eAAe,CAAC;IACtE;EACF;AAAC,qB","file":"/packages/shell-server.js","sourcesContent":["export * from \"./shell-server.js\";\nimport { listen } from \"./shell-server.js\";\n\nconst shellDir = process.env.METEOR_SHELL_DIR;\nif (shellDir) {\n  listen(shellDir);\n}\n","import assert from \"assert\";\nimport { join as pathJoin } from \"path\";\nimport { PassThrough } from \"stream\";\nimport {\n  closeSync,\n  openSync,\n  readFileSync,\n  unlink,\n  writeFileSync,\n  writeSync,\n} from \"fs\";\nimport { createServer } from \"net\";\nimport { start as replStart } from \"repl\";\n\n// Enable process.sendMessage for communication with build process.\nimport \"meteor/inter-process-messaging\";\n\nconst INFO_FILE_MODE = parseInt(\"600\", 8); // Only the owner can read or write.\nconst EXITING_MESSAGE = \"Shell exiting...\";\n\n// Invoked by the server process to listen for incoming connections from\n// shell clients. Each connection gets its own REPL instance.\nexport function listen(shellDir) {\n  function callback() {\n    new Server(shellDir).listen();\n  }\n\n  // If the server is still in the very early stages of starting up,\n  // Meteor.startup may not available yet.\n  if (typeof Meteor === \"object\") {\n    Meteor.startup(callback);\n  } else if (typeof __meteor_bootstrap__ === \"object\") {\n    const hooks = __meteor_bootstrap__.startupHooks;\n    if (hooks) {\n      hooks.push(callback);\n    } else {\n      // As a fallback, just call the callback asynchronously.\n      setImmediate(callback);\n    }\n  }\n}\n\n// Disabling the shell causes all attached clients to disconnect and exit.\nexport function disable(shellDir) {\n  try {\n    // Replace info.json with a file that says the shell server is\n    // disabled, so that any connected shell clients will fail to\n    // reconnect after the server process closes their sockets.\n    writeFileSync(\n      getInfoFile(shellDir),\n      JSON.stringify({\n        status: \"disabled\",\n        reason: \"Shell server has shut down.\"\n      }) + \"\\n\",\n      { mode: INFO_FILE_MODE }\n    );\n  } catch (ignored) {}\n}\n\n// Shell commands need to be executed in a Fiber in case they call into\n// code that yields. Using a Promise is an even better idea, since it runs\n// its callbacks in Fibers drawn from a pool, so the Fibers are recycled.\nconst evalCommandPromise = Promise.resolve();\n\nclass Server {\n  constructor(shellDir) {\n    assert.ok(this instanceof Server);\n\n    this.shellDir = shellDir;\n    this.key = Math.random().toString(36).slice(2);\n\n    this.server =\n      createServer((socket) => {\n        this.onConnection(socket);\n      })\n      .on(\"error\", (err) => {\n        console.error(err.stack);\n      });\n  }\n\n  listen() {\n    const infoFile = getInfoFile(this.shellDir);\n\n    unlink(infoFile, () => {\n      this.server.listen(0, \"127.0.0.1\", () => {\n        writeFileSync(infoFile, JSON.stringify({\n          status: \"enabled\",\n          port: this.server.address().port,\n          key: this.key\n        }) + \"\\n\", {\n          mode: INFO_FILE_MODE\n        });\n      });\n    });\n  }\n\n  onConnection(socket) {\n    // Make sure this function doesn't try to write anything to the socket\n    // after it has been closed.\n    socket.on(\"close\", function() {\n      socket = null;\n    });\n\n    // If communication is not established within 1000ms of the first\n    // connection, forcibly close the socket.\n    const timeout = setTimeout(function() {\n      if (socket) {\n        socket.removeAllListeners(\"data\");\n        socket.end(EXITING_MESSAGE + \"\\n\");\n      }\n    }, 1000);\n\n    // Let connecting clients configure certain REPL options by sending a\n    // JSON object over the socket. For example, only the client knows\n    // whether it's running a TTY or an Emacs subshell or some other kind of\n    // terminal, so the client must decide the value of options.terminal.\n    readJSONFromStream(socket, (error, options, replInputSocket) => {\n      clearTimeout(timeout);\n\n      if (error) {\n        socket = null;\n        console.error(error.stack);\n        return;\n      }\n\n      if (options.key !== this.key) {\n        if (socket) {\n          socket.end(EXITING_MESSAGE + \"\\n\");\n        }\n        return;\n      }\n      delete options.key;\n\n      // Set the columns to what is being requested by the client.\n      if (options.columns && socket) {\n        socket.columns = options.columns;\n      }\n      delete options.columns;\n\n      options = Object.assign(\n        Object.create(null),\n\n        // Defaults for configurable options.\n        {\n          prompt: \"> \",\n          terminal: true,\n          useColors: true,\n          ignoreUndefined: true,\n        },\n\n        // Configurable options\n        options,\n\n        // Immutable options.\n        {\n          input: replInputSocket,\n          useGlobal: false,\n          output: socket\n        }\n      );\n\n      // The prompt during an evaluateAndExit must be blank to ensure\n      // that the prompt doesn't inadvertently get parsed as part of\n      // the JSON communication channel.\n      if (options.evaluateAndExit) {\n        options.prompt = \"\";\n      }\n\n      // Start the REPL.\n      this.startREPL(options);\n\n      if (options.evaluateAndExit) {\n        this._wrappedDefaultEval.call(\n          Object.create(null),\n          options.evaluateAndExit.command,\n          global,\n          options.evaluateAndExit.filename || \"<meteor shell>\",\n          function (error, result) {\n            if (socket) {\n              function sendResultToSocket(message) {\n                // Sending back a JSON payload allows the client to\n                // distinguish between errors and successful results.\n                socket.end(JSON.stringify(message) + \"\\n\");\n              }\n\n              if (error) {\n                sendResultToSocket({\n                  error: error.toString(),\n                  code: 1\n                });\n              } else {\n                sendResultToSocket({\n                  result,\n                });\n              }\n            }\n          }\n        );\n        return;\n      }\n      delete options.evaluateAndExit;\n\n      this.enableInteractiveMode(options);\n    });\n  }\n\n  startREPL(options) {\n    // Make sure this function doesn't try to write anything to the output\n    // stream after it has been closed.\n    options.output.on(\"close\", function() {\n      options.output = null;\n    });\n\n    const repl = this.repl = replStart(options);\n    const { shellDir } = this;\n\n    // This is technique of setting `repl.context` is similar to how the\n    // `useGlobal` option would work during a normal `repl.start()` and\n    // allows shell access (and tab completion!) to Meteor globals (i.e.\n    // Underscore _, Meteor, etc.). By using this technique, which changes\n    // the context after startup, we avoid stomping on the special `_`\n    // variable (in `repl` this equals the value of the last command) from\n    // being overridden in the client/server socket-handshaking.  Furthermore,\n    // by setting `useGlobal` back to true, we allow the default eval function\n    // to use the desired `runInThisContext` method (https://git.io/vbvAB).\n    repl.context = global;\n    repl.useGlobal = true;\n\n    setRequireAndModule(repl.context);\n\n    // In order to avoid duplicating code here, specifically the complexities\n    // of catching so-called \"Recoverable Errors\" (https://git.io/vbvbl),\n    // we will wrap the default eval, run it in a Fiber (via a Promise), and\n    // give it the opportunity to decide if the user is mid-code-block.\n    const defaultEval = repl.eval;\n\n    function wrappedDefaultEval(code, context, file, callback) {\n      if (Package.ecmascript) {\n        try {\n          code = Package.ecmascript.ECMAScript.compileForShell(code, {\n            cacheDirectory: getCacheDirectory(shellDir)\n          });\n        } catch (err) {\n          // Any Babel error here might be just fine since it's\n          // possible the code was incomplete (multi-line code on the REPL).\n          // The defaultEval below will use its own functionality to determine\n          // if this error is \"recoverable\".\n        }\n      }\n\n      evalCommandPromise\n        .then(() => defaultEval(code, context, file, callback))\n        .catch(callback);\n    }\n\n    // Have the REPL use the newly wrapped function instead and store the\n    // _wrappedDefaultEval so that evalulateAndExit calls can use it directly.\n    repl.eval = this._wrappedDefaultEval = wrappedDefaultEval;\n  }\n\n  enableInteractiveMode(options) {\n    // History persists across shell sessions!\n    this.initializeHistory();\n\n    const repl = this.repl;\n\n    // Implement an alternate means of fetching the return value,\n    // via `__` (double underscore) as originally implemented in:\n    // https://github.com/meteor/meteor/commit/2443d832265c7d1c\n    Object.defineProperty(repl.context, \"__\", {\n      get: () => repl.last,\n      set: (val) => {\n        repl.last = val;\n      },\n\n      // Allow this property to be (re)defined more than once (e.g. each\n      // time the server restarts).\n      configurable: true\n    });\n\n    // Some improvements to the existing help messages.\n    function addHelp(cmd, helpText) {\n      const info = repl.commands[cmd] || repl.commands[\".\" + cmd];\n      if (info) {\n        info.help = helpText;\n      }\n    }\n    addHelp(\"break\", \"Terminate current command input and display new prompt\");\n    addHelp(\"exit\", \"Disconnect from server and leave shell\");\n    addHelp(\"help\", \"Show this help information\");\n\n    // When the REPL exits, signal the attached client to exit by sending it\n    // the special EXITING_MESSAGE.\n    repl.on(\"exit\", function() {\n      if (options.output) {\n        options.output.write(EXITING_MESSAGE + \"\\n\");\n        options.output.end();\n      }\n    });\n\n    // When the server process exits, end the output stream but do not\n    // signal the attached client to exit.\n    process.on(\"exit\", function() {\n      if (options.output) {\n        options.output.end();\n      }\n    });\n\n    // This Meteor-specific shell command rebuilds the application as if a\n    // change was made to server code.\n    repl.defineCommand(\"reload\", {\n      help: \"Restart the server and the shell\",\n      action: function() {\n        if (process.sendMessage) {\n          process.sendMessage(\"shell-server\", { command: \"reload\" });\n        } else {\n          process.exit(0);\n        }\n      }\n    });\n  }\n\n  // This function allows a persistent history of shell commands to be saved\n  // to and loaded from .meteor/local/shell/history.\n  initializeHistory() {\n    const repl = this.repl;\n    const historyFile = getHistoryFile(this.shellDir);\n    let historyFd = openSync(historyFile, \"a+\");\n    const historyLines = readFileSync(historyFile, \"utf8\").split(\"\\n\");\n    const seenLines = Object.create(null);\n\n    if (! repl.history) {\n      repl.history = [];\n      repl.historyIndex = -1;\n    }\n\n    while (repl.history && historyLines.length > 0) {\n      const line = historyLines.pop();\n      if (line && /\\S/.test(line) && ! seenLines[line]) {\n        repl.history.push(line);\n        seenLines[line] = true;\n      }\n    }\n\n    repl.addListener(\"line\", function(line) {\n      if (historyFd >= 0 && /\\S/.test(line)) {\n        writeSync(historyFd, line + \"\\n\");\n      }\n    });\n\n    this.repl.on(\"exit\", function() {\n      closeSync(historyFd);\n      historyFd = -1;\n    });\n  }\n}\n\nfunction readJSONFromStream(inputStream, callback) {\n  const outputStream = new PassThrough();\n  let dataSoFar = \"\";\n\n  function onData(buffer) {\n    const lines = buffer.toString(\"utf8\").split(\"\\n\");\n\n    while (lines.length > 0) {\n      dataSoFar += lines.shift();\n\n      let json;\n      try {\n        json = JSON.parse(dataSoFar);\n      } catch (error) {\n        if (error instanceof SyntaxError) {\n          continue;\n        }\n\n        return finish(error);\n      }\n\n      if (lines.length > 0) {\n        outputStream.write(lines.join(\"\\n\"));\n      }\n\n      inputStream.pipe(outputStream);\n\n      return finish(null, json);\n    }\n  }\n\n  function onClose() {\n    finish(new Error(\"stream unexpectedly closed\"));\n  }\n\n  let finished = false;\n  function finish(error, json) {\n    if (! finished) {\n      finished = true;\n      inputStream.removeListener(\"data\", onData);\n      inputStream.removeListener(\"error\", finish);\n      inputStream.removeListener(\"close\", onClose);\n      callback(error, json, outputStream);\n    }\n  }\n\n  inputStream.on(\"data\", onData);\n  inputStream.on(\"error\", finish);\n  inputStream.on(\"close\", onClose);\n}\n\nfunction getInfoFile(shellDir) {\n  return pathJoin(shellDir, \"info.json\");\n}\n\nfunction getHistoryFile(shellDir) {\n  return pathJoin(shellDir, \"history\");\n}\n\nfunction getCacheDirectory(shellDir) {\n  return pathJoin(shellDir, \"cache\");\n}\n\nfunction setRequireAndModule(context) {\n  if (Package.modules) {\n    // Use the same `require` function and `module` object visible to the\n    // application.\n    const toBeInstalled = {};\n    const shellModuleName = \"meteor-shell-\" +\n      Math.random().toString(36).slice(2) + \".js\";\n\n    toBeInstalled[shellModuleName] = function (require, exports, module) {\n      context.module = module;\n      context.require = require;\n\n      // Tab completion sometimes uses require.extensions, but only for\n      // the keys.\n      require.extensions = {\n        \".js\": true,\n        \".json\": true,\n        \".node\": true,\n      };\n    };\n\n    // This populates repl.context.{module,require} by evaluating the\n    // module defined above.\n    Package.modules.meteorInstall(toBeInstalled)(\"./\" + shellModuleName);\n  }\n}\n"]}