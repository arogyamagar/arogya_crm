{"version":3,"sources":["meteor://ðŸ’»app/packages/vite:bundler/server.js"],"names":["Meteor","module1","link","v","WebAppInternals","fork","isDevelopment","cwd","guessCwd","viteSetup","host","port","entryFile","registerBoilerplateDataCallback","request","data","arch","dynamicBody","child","Assets","absoluteFilePath","stdio","detached","on","kind","Object","assign","Error","console","log","send","forEach","event","process","once","kill","env","PWD","index","indexOf","substring"],"mappings":";;;;;;;;;;;;;;;;;;;;;;EAAA,IAAIA,MAAM;EAACC,OAAO,CAACC,IAAI,CAAC,eAAe,EAAC;IAACF,MAAM,CAACG,CAAC,EAAC;MAACH,MAAM,GAACG,CAAC;IAAA;EAAC,CAAC,EAAC,CAAC,CAAC;EAAC,IAAIC,eAAe;EAACH,OAAO,CAACC,IAAI,CAAC,eAAe,EAAC;IAACE,eAAe,CAACD,CAAC,EAAC;MAACC,eAAe,GAACD,CAAC;IAAA;EAAC,CAAC,EAAC,CAAC,CAAC;EAAC,IAAIE,IAAI;EAACJ,OAAO,CAACC,IAAI,CAAC,oBAAoB,EAAC;IAACG,IAAI,CAACF,CAAC,EAAC;MAACE,IAAI,GAACF,CAAC;IAAA;EAAC,CAAC,EAAC,CAAC,CAAC;EAI5N,IAAIH,MAAM,CAACM,aAAa,EAAE;IACxB,MAAMC,GAAG,GAAGC,QAAQ,EAAE;IAEtB,MAAMC,SAAS,GAAG;MAChBC,IAAI,EAAE,WAAW;MACjBC,IAAI,EAAE,CAAC;MACPC,SAAS,EAAE;IACb,CAAC;IAEDR,eAAe,CAACS,+BAA+B,CAAC,aAAa,EAAE,CAACC,OAAO,EAAEC,IAAI,EAAEC,IAAI,KAAK;MACtF,MAAM;QAAEN,IAAI;QAAEC,IAAI;QAAEC;MAAU,CAAC,GAAGH,SAAS;MAC3C,IAAIG,SAAS,EAAE;QACbG,IAAI,CAACE,WAAW,aAAMF,IAAI,CAACE,WAAW,IAAI,EAAE,oDAAuCP,IAAI,cAAIC,IAAI,cAAIC,SAAS,mBAAe;MAC7H,CAAC,MAAM;QACL;QACA;QACAG,IAAI,CAACE,WAAW,aAAMF,IAAI,CAACE,WAAW,IAAI,EAAE,kEAA+D;MAC7G;IACF,CAAC,CAAC;;IAEF;IACA;IACA,MAAMC,KAAK,GAAGb,IAAI,CAACc,MAAM,CAACC,gBAAgB,CAAC,gBAAgB,CAAC,EAAE;MAC5DC,KAAK,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC;MAC/Cd,GAAG;MACHe,QAAQ,EAAE;IACZ,CAAC,CAAC;IACFJ,KAAK,CAACK,EAAE,CAAC,SAAS,EAAE,QAAoB;MAAA,IAAnB;QAAEC,IAAI;QAAET;MAAK,CAAC;MACjC,QAAQS,IAAI;QACV,KAAK,WAAW;UACdC,MAAM,CAACC,MAAM,CAACjB,SAAS,EAAEM,IAAI,CAAC;UAC9B,IAAI,CAACN,SAAS,CAACG,SAAS,EAAE;YACxB,MAAM,IAAIZ,MAAM,CAAC2B,KAAK,CAAC,GAAG,EAAE,iHAAiH,CAAC;UAChJ;UACF;QACA;UACEC,OAAO,CAACC,GAAG,CAACL,IAAI,EAAET,IAAI,CAAC;MAAA;IAE7B,CAAC,CAAC;IACFG,KAAK,CAACY,IAAI,CAAC,OAAO,CAAC;IAClB,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC,CAACC,OAAO,CAACC,KAAK,IAAI;MACxDC,OAAO,CAACC,IAAI,CAACF,KAAK,EAAE,MAAM;QACxBd,KAAK,CAACiB,IAAI,EAAE;MACd,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA,SAAS3B,QAAQ,GAAI;IAAA;IACnB,IAAID,GAAG,uBAAG0B,OAAO,CAACG,GAAG,CAACC,GAAG,+DAAIJ,OAAO,CAAC1B,GAAG,EAAE;IAC1C,MAAM+B,KAAK,GAAG/B,GAAG,CAACgC,OAAO,CAAC,SAAS,CAAC;IACpC,IAAID,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB/B,GAAG,GAAGA,GAAG,CAACiC,SAAS,CAAC,CAAC,EAAEF,KAAK,CAAC;IAC/B;IACA,OAAO/B,GAAG;EACZ;AAAC,qB","file":"/packages/vite_bundler.js","sourcesContent":["import { Meteor } from 'meteor/meteor'\nimport { WebAppInternals } from 'meteor/webapp'\nimport { fork } from 'node:child_process'\n\nif (Meteor.isDevelopment) {\n  const cwd = guessCwd()\n\n  const viteSetup = {\n    host: 'localhost',\n    port: 0,\n    entryFile: '',\n  }\n\n  WebAppInternals.registerBoilerplateDataCallback('meteor-vite', (request, data, arch) => {\n    const { host, port, entryFile } = viteSetup\n    if (entryFile) {\n      data.dynamicBody = `${data.dynamicBody || \"\"}\\n<script type=\"module\" src=\"http://${host}:${port}/${entryFile}\"></script>\\n`\n    } else {\n      // Vite not ready yet\n      // Refresh page after some time\n      data.dynamicBody = `${data.dynamicBody || \"\"}\\n<script>setTimeout(() => location.reload(), 500)</script>\\n`\n    }\n  })\n\n  // Use a worker to skip reify and Fibers\n  // Use a child process instead of worker to avoid WASM/archived threads error\n  const child = fork(Assets.absoluteFilePath('worker-dev.mjs'), {\n    stdio: ['inherit', 'inherit', 'inherit', 'ipc'],\n    cwd,\n    detached: false,\n  })\n  child.on('message', ({ kind, data }) => {\n    switch (kind) {\n      case 'viteSetup':\n        Object.assign(viteSetup, data)\n        if (!viteSetup.entryFile) {\n          throw new Meteor.Error(500, 'Missing `meteor.clientEntry` with path to entry file (the one you want to build with Vite) in your vite config.')\n        }\n      break\n      default:\n        console.log(kind, data)\n    }\n  })\n  child.send('start')\n  ;['exit', 'SIGINT', 'SIGHUP', 'SIGTERM'].forEach(event => {\n    process.once(event, () => {\n      child.kill()\n    })\n  })\n}\n\nfunction guessCwd () {\n  let cwd = process.env.PWD ?? process.cwd()\n  const index = cwd.indexOf('.meteor')\n  if (index !== -1) {\n    cwd = cwd.substring(0, index)\n  }\n  return cwd\n}\n"]}