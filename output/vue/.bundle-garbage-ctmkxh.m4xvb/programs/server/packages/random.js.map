{"version":3,"sources":["meteor://ðŸ’»app/packages/random/main_server.js","meteor://ðŸ’»app/packages/random/AbstractRandomGenerator.js","meteor://ðŸ’»app/packages/random/AleaRandomGenerator.js","meteor://ðŸ’»app/packages/random/NodeRandomGenerator.js","meteor://ðŸ’»app/packages/random/createAleaGenerator.js","meteor://ðŸ’»app/packages/random/createRandom.js"],"names":["module","export","Random","NodeRandomGenerator","link","default","v","createRandom","RandomGenerator","Meteor","UNMISTAKABLE_CHARS","BASE64_CHARS","fraction","Error","hexString","digits","_randomString","charsCount","alphabet","result","i","choice","id","undefined","secret","arrayOrString","index","Math","floor","length","substr","AleaRandomGenerator","Alea","seeds","Mash","n","mash","data","toString","charCodeAt","h","version","s0","s1","s2","c","Date","random","t","uint32","fract53","args","constructor","alea","crypto","numerator","Number","parseInt","numBytes","ceil","bytes","randomBytes","e","pseudoRandomBytes","substring","createAleaGenerator","height","window","innerHeight","document","documentElement","clientHeight","body","width","innerWidth","clientWidth","agent","navigator","userAgent","createAleaGeneratorWithGeneratedSeed","generator","createWithSeeds","insecure"],"mappings":"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","file":"/packages/random.js","sourcesContent":["// We use cryptographically strong PRNGs (crypto.getRandomBytes())\n// When using crypto.getRandomValues(), our primitive is hexString(),\n// from which we construct fraction().\n\nimport NodeRandomGenerator from './NodeRandomGenerator';\nimport createRandom from './createRandom';\n\nexport const Random = createRandom(new NodeRandomGenerator());\n","// We use cryptographically strong PRNGs (crypto.getRandomBytes() on the server,\n// window.crypto.getRandomValues() in the browser) when available. If these\n// PRNGs fail, we fall back to the Alea PRNG, which is not cryptographically\n// strong, and we seed it with various sources such as the date, Math.random,\n// and window size on the client.  When using crypto.getRandomValues(), our\n// primitive is hexString(), from which we construct fraction(). When using\n// window.crypto.getRandomValues() or alea, the primitive is fraction and we use\n// that to construct hex string.\n\nimport { Meteor } from 'meteor/meteor';\n\nconst UNMISTAKABLE_CHARS = '23456789ABCDEFGHJKLMNPQRSTWXYZabcdefghijkmnopqrstuvwxyz';\nconst BASE64_CHARS = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n  '0123456789-_';\n\n// `type` is one of `RandomGenerator.Type` as defined below.\n//\n// options:\n// - seeds: (required, only for RandomGenerator.Type.ALEA) an array\n//   whose items will be `toString`ed and used as the seed to the Alea\n//   algorithm\nexport default class RandomGenerator {\n\n  /**\n   * @name Random.fraction\n   * @summary Return a number between 0 and 1, like `Math.random`.\n   * @locus Anywhere\n   */\n  fraction () {\n    throw new Error(`Unknown random generator type`);\n  }\n\n  /**\n   * @name Random.hexString\n   * @summary Return a random string of `n` hexadecimal digits.\n   * @locus Anywhere\n   * @param {Number} n Length of the string\n   */\n  hexString (digits) {\n    return this._randomString(digits, '0123456789abcdef');\n  }\n\n  _randomString (charsCount, alphabet) {\n    let result = '';\n    for (let i = 0; i < charsCount; i++) {\t\n      result += this.choice(alphabet);\n    }\n    return result;\n  }\n\n  /**\n   * @name Random.id\n   * @summary Return a unique identifier, such as `\"Jjwjg6gouWLXhMGKW\"`, that is\n   * likely to be unique in the whole world.\n   * @locus Anywhere\n   * @param {Number} [n] Optional length of the identifier in characters\n   *   (defaults to 17)\n   */\n  id (charsCount) {\n    // 17 characters is around 96 bits of entropy, which is the amount of\n    // state in the Alea PRNG.\n    if (charsCount === undefined) {\n      charsCount = 17;\n    }\n\n    return this._randomString(charsCount, UNMISTAKABLE_CHARS);\n  }\n\n  /**\n   * @name Random.secret\n   * @summary Return a random string of printable characters with 6 bits of\n   * entropy per character. Use `Random.secret` for security-critical secrets\n   * that are intended for machine, rather than human, consumption.\n   * @locus Anywhere\n   * @param {Number} [n] Optional length of the secret string (defaults to 43\n   *   characters, or 256 bits of entropy)\n   */\n  secret (charsCount) {\n    // Default to 256 bits of entropy, or 43 characters at 6 bits per\n    // character.\n    if (charsCount === undefined) {\n      charsCount = 43;\n    }\n\n    return this._randomString(charsCount, BASE64_CHARS);\n  }\n\n  /**\n   * @name Random.choice\n   * @summary Return a random element of the given array or string.\n   * @locus Anywhere\n   * @param {Array|String} arrayOrString Array or string to choose from\n   */\n  choice (arrayOrString) {\n    const index = Math.floor(this.fraction() * arrayOrString.length);\n    if (typeof arrayOrString === 'string') {\n      return arrayOrString.substr(index, 1);\n    }\n    return arrayOrString[index];\n  }\n}\n","import RandomGenerator from './AbstractRandomGenerator';\n\n// Alea PRNG, which is not cryptographically strong\n// see http://baagoe.org/en/wiki/Better_random_numbers_for_javascript\n// for a full discussion and Alea implementation.\nfunction Alea(seeds) {\n  function Mash() {\n    let n = 0xefc8249d;\n\n    const mash = (data) => {\n      data = data.toString();\n      for (let i = 0; i < data.length; i++) {\n        n += data.charCodeAt(i);\n        let h = 0.02519603282416938 * n;\n        n = h >>> 0;\n        h -= n;\n        h *= n;\n        n = h >>> 0;\n        h -= n;\n        n += h * 0x100000000; // 2^32\n      }\n      return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n    };\n\n    mash.version = 'Mash 0.9';\n    return mash;\n  }\n\n  let s0 = 0;\n  let s1 = 0;\n  let s2 = 0;\n  let c = 1;\n  if (seeds.length === 0) {\n    seeds = [+new Date];\n  }\n  let mash = Mash();\n  s0 = mash(' ');\n  s1 = mash(' ');\n  s2 = mash(' ');\n\n  for (let i = 0; i < seeds.length; i++) {\n    s0 -= mash(seeds[i]);\n    if (s0 < 0) {\n      s0 += 1;\n    }\n    s1 -= mash(seeds[i]);\n    if (s1 < 0) {\n      s1 += 1;\n    }\n    s2 -= mash(seeds[i]);\n    if (s2 < 0) {\n      s2 += 1;\n    }\n  }\n  mash = null;\n\n  const random = () => {\n    const t = (2091639 * s0) + (c * 2.3283064365386963e-10); // 2^-32\n    s0 = s1;\n    s1 = s2;\n    return s2 = t - (c = t | 0);\n  };\n\n  random.uint32 = () => random() * 0x100000000; // 2^32\n  random.fract53 = () => random() +\n        ((random() * 0x200000 | 0) * 1.1102230246251565e-16); // 2^-53\n\n  random.version = 'Alea 0.9';\n  random.args = seeds;\n  return random;\n}\n\n// options:\n// - seeds: an array\n//   whose items will be `toString`ed and used as the seed to the Alea\n//   algorithm\nexport default class AleaRandomGenerator extends RandomGenerator {\n  constructor ({ seeds = [] } = {}) {\n    super();\n    if (!seeds) {\n      throw new Error('No seeds were provided for Alea PRNG');\n    }\n    this.alea = Alea(seeds);\n  }\n\n  /**\n   * @name Random.fraction\n   * @summary Return a number between 0 and 1, like `Math.random`.\n   * @locus Anywhere\n   */\n  fraction () {\n    return this.alea();\n  }\n}\n","import crypto from 'crypto';\nimport RandomGenerator from './AbstractRandomGenerator';\n\nexport default class NodeRandomGenerator extends RandomGenerator {\n  /**\n   * @name Random.fraction\n   * @summary Return a number between 0 and 1, like `Math.random`.\n   * @locus Anywhere\n   */\n  fraction () {\n    const numerator = Number.parseInt(this.hexString(8), 16);\n    return numerator * 2.3283064365386963e-10; // 2^-3;\n  }\n\n  /**\n   * @name Random.hexString\n   * @summary Return a random string of `n` hexadecimal digits.\n   * @locus Anywhere\n   * @param {Number} n Length of the string\n   */\n  hexString (digits) {\n    const numBytes = Math.ceil(digits / 2);\n    let bytes;\n    // Try to get cryptographically strong randomness. Fall back to\n    // non-cryptographically strong if not available.\n    try {\n      bytes = crypto.randomBytes(numBytes);\n    } catch (e) {\n      // XXX should re-throw any error except insufficient entropy\n      bytes = crypto.pseudoRandomBytes(numBytes);\n    }\n    const result = bytes.toString('hex');\n    // If the number of digits is odd, we'll have generated an extra 4 bits\n    // of randomness, so we need to trim the last digit.\n    return result.substring(0, digits);\n  }\n}\n","import AleaRandomGenerator from './AleaRandomGenerator';\n\n// instantiate RNG.  Heuristically collect entropy from various sources when a\n// cryptographic PRNG isn't available.\n\n// client sources\nconst height = (typeof window !== 'undefined' && window.innerHeight) ||\n      (typeof document !== 'undefined'\n       && document.documentElement\n       && document.documentElement.clientHeight) ||\n      (typeof document !== 'undefined'\n       && document.body\n       && document.body.clientHeight) ||\n      1;\n\nconst width = (typeof window !== 'undefined' && window.innerWidth) ||\n      (typeof document !== 'undefined'\n       && document.documentElement\n       && document.documentElement.clientWidth) ||\n      (typeof document !== 'undefined'\n       && document.body\n       && document.body.clientWidth) ||\n      1;\n\nconst agent = (typeof navigator !== 'undefined' && navigator.userAgent) || '';\n\nexport default function createAleaGenerator() {\n  return new AleaRandomGenerator({\n    seeds: [new Date, height, width, agent, Math.random()],\n  });\n}\n","import AleaRandomGenerator from './AleaRandomGenerator'\nimport createAleaGeneratorWithGeneratedSeed from './createAleaGenerator';\n\nexport default function createRandom(generator) {\n  // Create a non-cryptographically secure PRNG with a given seed (using\n  // the Alea algorithm)\n  generator.createWithSeeds = (...seeds) => {\n    if (seeds.length === 0) {\n      throw new Error('No seeds were provided');\n    }\n    return new AleaRandomGenerator({ seeds });\n  };\n\n  // Used like `Random`, but much faster and not cryptographically\n  // secure\n  generator.insecure = createAleaGeneratorWithGeneratedSeed();\n\n  return generator;\n}\n"]}