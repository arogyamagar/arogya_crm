{"version":3,"mappings":"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","names":["module","Profile","Fiber","require","filter","parseFloat","process","env","METEOR_PROFILE","bucketStats","Object","create","SPACES_STR","spaces","len","length","slice","DOTS_STR","dots","leftRightAlign","str1","str2","middle","Math","max","leftRightDots","printIndentation","isLastLeafStack","init","i","isLastLeaf","last","formatMs","n","String","round","replace","encodeEntryKey","entry","join","decodeEntryKey","key","split","globalEntry","running","bucketName","f","enabled","assign","profileWrapper","apply","arguments","name","currentEntry","current","profilerEntry","push","start","hrtime","elapsed","stats","time","count","isOther","pop","bucket","run","console","log","runningName","print","reportNum","report","setupReport","reportHierarchy","reportHotLeaves","getTopLevelTotal","entries","prefix","entryName","entryStats","entryTime","isTopLevelEntry","topLevelEntries","text","isChild","entry1","entry2","children","hasChildren","hasSignificantChildren","some","isLeaf","otherTime","total","forEach","child","injectOtherTime","other","reportOn","isParent","childrenList","concat","allLeafs","set","map","keys","sort","leafTotals","leafName","leaf","totals","info","a","b","topTotal","parent"],"sourceRoot":"","sources":["tools/tool-env/profile.ts"],"sourcesContent":["// Tiny profiler\n//\n// Enable by setting the environment variable `METEOR_PROFILE`.\n//\n// The main entry point is `Profile`, which wraps an existing function\n// and returns a new function which, when called, calls the original\n// function and profiles it.\n//\n// before:\n//\n//     foo: function (a) {\n//       return a + this.b;\n//     },\n//\n// after:\n//\n//     foo: Profile(\"foo\", function (a) {\n//       return a + this.b;\n//     }),\n//\n// The advantage of this form is that it doesn't change the\n// indentation of the wrapped code, which makes merging changes from\n// other code branches easier.\n//\n// If profiling is disabled (if `METEOR_PROFILE` isn't set), `Profile`\n// simply returns the original function.\n//\n// To run a profiling session and print the report, call `Profile.run`:\n//\n//     var createBundle = function () {\n//       Profile.run(\"bundle\", function () {\n//         ...code to create the bundle which includes calls to `Profile`.\n//       });\n//     };\n//\n// Code is not profiled when called outside of a `Profile.run`, so the\n// times in the report only include the time spent inside of the call\n// to `Profile.run`.\n//\n// Sometimes you'll want to use a name for the profile bucket which\n// depends on the arguments passed to the function or the value of\n// `this`.  In this case you can pass a function for the bucket\n// argument, which will be called to get the bucket name.\n//\n// before:\n//     build: function (target) {\n//       ... build target ...\n//     },\n//\n// after:\n//     build: Profile(\n//       function (target) { return \"build \" + target; },\n//       function (target) {\n//         ... build target ...\n//       }),\n//\n// But if it's easier, you can use `Profile.time` instead, which\n// immediately calls the passed function with no arguments and\n// profiles it, and returns what the function returns.\n//\n//     foo: function (a) {\n//       var self = this;\n//       return Profile.time(\"foo\", function () {\n//         return a + self.b;\n//       });\n//     },\n//\n//     build: function (target) {\n//       var self = this;\n//       self.doSomeSetup();\n//       Profile.time(\"build \" + target, function () {\n//         ... build target ...\n//       });\n//       self.doSomeCleanup();\n//     },\n//\n// The disadvantage is that you end up changing the indentation of the\n// profiled code, which makes merging branches more painful.  But you\n// can profile anywhere in the code; you don't have to just profile at\n// function boundaries.\n//\n// Note profiling code will itself add a bit of execution time.\n// If you profile in a tight loop and your total execution time is\n// going up, you're probably starting to profile how long it takes to\n// profile things :).\n//\n// If another profile (such as \"compile js\") is called while the first\n// function is currently being profiled, this creates an entry like\n// this:\n//\n//    build client : compile js\n//\n// which can continue to be nested, e.g.,\n//\n//    build client : compile js : read source files\n//\n// The total time reported for a bucket such as \"build client\" doesn't\n// change regardless of whether it has child entries or not.  However,\n// if an entry has child entries, it automatically gets an \"other\"\n// entry:\n//\n//     build client: 400.0\n//       compile js: 300.0\n//         read source files: 20.0\n//         other compile js: 280.0\n//       other build client: 100.0\n//\n// The \"other\" entry reports how much time was spent in the \"build\n// client\" entry not spent in the other child entries.\n//\n// The are two reports displayed: the hierarchical report and the\n// leaf time report.  The hierarchical report looks like the example\n// above and shows how much time was spent in each entry within its\n// parent entry.\n//\n// The primary purpose of the hierarchical report is to be able to see\n// where times are unaccounted for.  If you see a lot of time being\n// spent in an \"other\" bucket, and you don't know what it is, you can\n// add more profiling to dig deeper.\n//\n// The leaf time report shows the total time spent within leaf\n// buckets.  For example, if if multiple steps have \"read source\n// files\", the leaf time reports shows the total amount of time spent\n// in \"read source files\" across all calls.\n//\n// Once you see in the hierarchical report that you have a good handle\n// on accounting for most of the time, the leaf report shows you which\n// buckets are the most expensive.\n//\n// By only including leaf buckets, the times in the leaf report are\n// non-overlapping.  (The total of the times equals the elapsed time\n// being profiled).\n//\n// For example, suppose \"A\" is profiled for a total time of 200ms, and\n// that includes a call to \"B\" of 150ms:\n//\n//     B: 150\n//     A (without B): 50\n//\n// and suppose there's another call to \"A\" which *doesn't* include a\n// call to \"B\":\n//\n//     A: 300\n//\n// and there's a call to \"B\" directly:\n//\n//     B: 100\n//\n// All for a total time of 600ms.  In the hierarchical report, this\n// looks like:\n//\n//     A: 500.0\n//       B: 150.0\n//       other A: 350.0\n//     B: 100.0\n//\n// and in the leaf time report:\n//\n//     other A: 350.0\n//     B: 250.0\n//\n// In both reports the grand total is 600ms.\n\nconst Fiber = require('fibers');\n\nconst filter = parseFloat(process.env.METEOR_PROFILE || \"100\"); // ms\n\ntype Stats = {\n  time: number;\n  count: number;\n  isOther: boolean;\n}\n\nlet bucketStats: Record<string, Stats> = Object.create(null);\n\nlet SPACES_STR = ' ';\n// return a string of `x` spaces\nfunction spaces(len: number) {\n  while (SPACES_STR.length < len) {\n    SPACES_STR = SPACES_STR + SPACES_STR;\n  }\n  return SPACES_STR.slice(0, len);\n}\n\nlet DOTS_STR = '.';\n// return a string of `x` dots\nfunction dots(len: number) {\n  while (DOTS_STR.length < len) {\n    DOTS_STR = DOTS_STR + DOTS_STR;\n  }\n  return DOTS_STR.slice(0, len);\n}\n\nfunction leftRightAlign(str1: string, str2: string, len: number) {\n  var middle = Math.max(1, len - str1.length - str2.length);\n  return str1 + spaces(middle) + str2;\n}\n\nfunction leftRightDots(str1: string, str2: string, len: number) {\n  var middle = Math.max(1, len - str1.length - str2.length);\n  return str1 + dots(middle) + str2;\n}\n\nfunction printIndentation(isLastLeafStack: boolean[]) {\n  if (!isLastLeafStack.length) {\n    return '';\n  }\n\n  const { length } = isLastLeafStack;\n  let init = '';\n  for (let i = 0; i < length - 1; ++i) {\n    const isLastLeaf = isLastLeafStack[i];\n    init += isLastLeaf ? '   ' : '│  ';\n  }\n\n  const last = isLastLeafStack[length - 1] ? '└─ ' : '├─ ';\n\n  return init + last;\n}\n\nfunction formatMs(n: number) {\n  // integer with thousands separators\n  return String(Math.round(n)).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") + \" ms\";\n}\n\nfunction encodeEntryKey(entry: string[]) {\n  return entry.join('\\t');\n}\n\nfunction decodeEntryKey(key: string) {\n  return key.split('\\t');\n}\n\nconst globalEntry: string[] = [];\nlet running = false;\n\nexport function Profile<\n  TArgs extends any[],\n  TResult,\n>(\n  bucketName: string | ((...args: TArgs) => string),\n  f: (...args: TArgs) => TResult,\n): typeof f {\n  if (! Profile.enabled) {\n    return f;\n  }\n\n  return Object.assign(function profileWrapper(this: any) {\n    if (! running) {\n      return f.apply(this, arguments as any);\n    }\n\n    const name = typeof bucketName === \"function\"\n      ? bucketName.apply(this, arguments as any)\n      : bucketName;\n\n    const currentEntry = Fiber.current\n      ? Fiber.current.profilerEntry || (Fiber.current.profilerEntry = [])\n      : globalEntry;\n\n    currentEntry.push(name);\n    const key = encodeEntryKey(currentEntry);\n    const start = process.hrtime();\n    try {\n      return f.apply(this, arguments as any);\n    } finally {\n      const elapsed = process.hrtime(start);\n      const stats = (bucketStats[key] || (bucketStats[key] = {\n        time: 0.0,\n        count: 0,\n        isOther: false,\n      }));\n      stats.time += (elapsed[0] * 1000 + elapsed[1] / 1000000);\n      stats.count++;\n      currentEntry.pop();\n    }\n  }, f) as typeof f;\n}\n\nexport namespace Profile {\n  export let enabled = !! process.env.METEOR_PROFILE;\n\n  export function time<TResult>(bucket: string, f: () => TResult) {\n    return Profile(bucket, f)();\n  }\n\n  export function run<TResult>(bucket: string, f: () => TResult) {\n    if (! Profile.enabled) {\n      return f();\n    }\n\n    if (running) {\n      // We've kept the calls to Profile.run in the tool disjoint so far,\n      // and should probably keep doing so, but if we mess up, warn and continue.\n      console.log(\"Warning: Nested Profile.run at \" + bucket);\n      return time(bucket, f);\n    }\n\n    runningName = bucket;\n    print(`(#${reportNum}) Profiling: ${runningName}`);\n    start();\n    try {\n      return time(bucket, f);\n    } finally {\n      report();\n      reportNum++;\n    }\n  }\n\n  function start() {\n    bucketStats = {};\n    running = true;\n  }\n\n  let runningName: string;\n  let reportNum = 1;\n  function report() {\n    if (! Profile.enabled) {\n      return;\n    }\n    running = false;\n    print('');\n    setupReport();\n    reportHierarchy();\n    print('');\n    reportHotLeaves();\n    print('');\n    print(`(#${reportNum}) Total: ${formatMs(getTopLevelTotal())}` +\n          ` (${runningName})`);\n    print('');\n  }\n}\n\ntype Entry = string[];\nlet entries: Entry[] = [];\n\nconst prefix = \"| \";\n\nfunction entryName(entry: Entry) {\n  return entry[entry.length - 1];\n}\n\nfunction entryStats(entry: Entry) {\n  return bucketStats[encodeEntryKey(entry)];\n}\n\nfunction entryTime(entry: Entry) {\n  return entryStats(entry).time;\n}\n\nfunction isTopLevelEntry(entry: Entry) {\n  return entry.length === 1;\n}\n\nfunction topLevelEntries() {\n  return entries.filter(isTopLevelEntry);\n}\n\nfunction print(text: string) {\n  console.log(prefix + text);\n}\n\nfunction isChild(entry1: Entry, entry2: Entry) {\n  if (entry2.length !== entry1.length + 1) {\n    return false;\n  }\n  for (var i = entry1.length - 1; i >= 0; i--) {\n    if (entry1[i] !== entry2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction children(entry1: Entry) {\n  return entries.filter(entry2 => isChild(entry1, entry2));\n}\n\nfunction hasChildren(entry: Entry) {\n  return children(entry).length > 0;\n}\n\nfunction hasSignificantChildren(entry: Entry) {\n  return children(entry).some(entry => entryTime(entry) >= filter);\n}\n\nfunction isLeaf(entry: Entry) {\n  return ! hasChildren(entry);\n}\n\nfunction otherTime(entry: Entry) {\n  let total = 0;\n  children(entry).forEach(child => {\n    total += entryTime(child);\n  });\n  return entryTime(entry) - total;\n}\n\nfunction injectOtherTime(entry: Entry) {\n  const other: Entry = entry.slice(0);\n  other.push(\"other \" + entryName(entry));\n  bucketStats[encodeEntryKey(other)] = {\n    time: otherTime(entry),\n    count: entryStats(entry).count,\n    isOther: true\n  };\n  entries.push(other);\n};\n\nfunction reportOn(entry: Entry, isLastLeafStack: boolean[] = []) {\n  const stats = entryStats(entry);\n  const isParent = hasSignificantChildren(entry);\n  const name = entryName(entry);\n\n  print((isParent ? leftRightDots : leftRightAlign)\n        (printIndentation(isLastLeafStack) + name, formatMs(stats.time), 70)\n        + (stats.isOther ? \"\" : (\" (\" + stats.count + \")\")));\n\n  if (isParent) {\n    const childrenList = children(entry).filter(entry => {\n      return entryStats(entry).time > filter;\n    });\n    childrenList.forEach((child, i) => {\n      const isLastLeaf = i === childrenList.length - 1;\n      reportOn(child, isLastLeafStack.concat(isLastLeaf));\n    });\n  }\n}\n\nfunction reportHierarchy() {\n  topLevelEntries().forEach(entry => reportOn(entry));\n}\n\nfunction allLeafs() {\n  const set: { [name: string]: any } = Object.create(null);\n  entries.filter(isLeaf).map(entryName).forEach(name => set[name] = true);\n  return Object.keys(set).sort();\n}\n\nfunction leafTotals(leafName: string) {\n  let time = 0;\n  let count = 0;\n\n  entries.filter(entry => {\n    return entryName(entry) === leafName && isLeaf(entry);\n  }).forEach(leaf => {\n    const stats = entryStats(leaf);\n    time += stats.time;\n    count += stats.count;\n  });\n\n  return { time, count };\n}\n\nfunction reportHotLeaves() {\n  print('Top leaves:');\n\n  const totals = allLeafs().map(leaf => {\n    const info = leafTotals(leaf);\n    return {\n      name: leaf,\n      time: info.time,\n      count: info.count,\n    };\n  }).sort((a, b) => {\n    return a.time === b.time ? 0 : a.time > b.time ? -1 : 1;\n  });\n\n  totals.forEach(total => {\n    if (total.time < 100) { // hard-coded larger filter to quality as \"hot\" here\n      return;\n    }\n    print(leftRightDots(total.name, formatMs(total.time), 65) + ` (${total.count})`);\n  });\n}\n\nfunction getTopLevelTotal() {\n  let topTotal = 0;\n  topLevelEntries().forEach(entry => {\n    topTotal += entryTime(entry);\n  });\n  return topTotal;\n}\n\nfunction setupReport() {\n  entries = Object.keys(bucketStats).map(decodeEntryKey);\n  entries.filter(hasSignificantChildren).forEach(parent => {\n    injectOtherTime(parent);\n  });\n}\n"],"file":"tools/tool-env/profile.js.map"}