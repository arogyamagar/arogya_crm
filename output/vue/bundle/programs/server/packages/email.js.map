{"version":3,"sources":["meteor://ðŸ’»app/packages/email/email.js"],"names":["_objectSpread","module1","link","default","v","export","Email","EmailTest","EmailInternals","Meteor","Log","Hook","url","nodemailer","wellKnow","NpmModules","mailcomposer","version","Npm","require","module","MailComposer","makeTransport","mailUrlString","mailUrl","URL","protocol","Error","port","debug","query","pool","transport","createTransport","format","_syncSendMail","wrapAsync","sendMail","knownHostsTransport","settings","undefined","service","user","password","hasSettings","Object","keys","length","host","split","urlObject","hostname","username","temp","pathname","substring","temp2","auth","pass","knowHostsTransport","getTransport","packageSettings","packages","email","process","env","MAIL_URL","cacheKey","cache","nextDevModeMailId","_getAndIncNextDevModeMailId","resetNextDevModeMailId","devModeSendAsync","mail","options","stream","stdout","Promise","resolve","reject","devModeMailId","output","push","readStream","compile","createReadStream","on","buffer","toString","write","join","err","smtpSend","sendHooks","hookSend","f","register","customTransport","send","mailComposer","forEach","hook","await","sendAsync","mailUrlEnv","mailUrlSettings","isProduction"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;EAAA,IAAIA,aAAa;EAACC,OAAO,CAACC,IAAI,CAAC,sCAAsC,EAAC;IAACC,OAAO,CAACC,CAAC,EAAC;MAACJ,aAAa,GAACI,CAAC;IAAA;EAAC,CAAC,EAAC,CAAC,CAAC;EAAtGH,OAAO,CAACI,MAAM,CAAC;IAACC,KAAK,EAAC,MAAIA,KAAK;IAACC,SAAS,EAAC,MAAIA,SAAS;IAACC,cAAc,EAAC,MAAIA;EAAc,CAAC,CAAC;EAAC,IAAIC,MAAM;EAACR,OAAO,CAACC,IAAI,CAAC,eAAe,EAAC;IAACO,MAAM,CAACL,CAAC,EAAC;MAACK,MAAM,GAACL,CAAC;IAAA;EAAC,CAAC,EAAC,CAAC,CAAC;EAAC,IAAIM,GAAG;EAACT,OAAO,CAACC,IAAI,CAAC,gBAAgB,EAAC;IAACQ,GAAG,CAACN,CAAC,EAAC;MAACM,GAAG,GAACN,CAAC;IAAA;EAAC,CAAC,EAAC,CAAC,CAAC;EAAC,IAAIO,IAAI;EAACV,OAAO,CAACC,IAAI,CAAC,sBAAsB,EAAC;IAACS,IAAI,CAACP,CAAC,EAAC;MAACO,IAAI,GAACP,CAAC;IAAA;EAAC,CAAC,EAAC,CAAC,CAAC;EAAC,IAAIQ,GAAG;EAACX,OAAO,CAACC,IAAI,CAAC,KAAK,EAAC;IAACC,OAAO,CAACC,CAAC,EAAC;MAACQ,GAAG,GAACR,CAAC;IAAA;EAAC,CAAC,EAAC,CAAC,CAAC;EAAC,IAAIS,UAAU;EAACZ,OAAO,CAACC,IAAI,CAAC,YAAY,EAAC;IAACC,OAAO,CAACC,CAAC,EAAC;MAACS,UAAU,GAACT,CAAC;IAAA;EAAC,CAAC,EAAC,CAAC,CAAC;EAAC,IAAIU,QAAQ;EAACb,OAAO,CAACC,IAAI,CAAC,2BAA2B,EAAC;IAACC,OAAO,CAACC,CAAC,EAAC;MAACU,QAAQ,GAACV,CAAC;IAAA;EAAC,CAAC,EAAC,CAAC,CAAC;EAQ3d,MAAME,KAAK,GAAG,CAAC,CAAC;EAChB,MAAMC,SAAS,GAAG,CAAC,CAAC;EAEpB,MAAMC,cAAc,GAAG;IAC5BO,UAAU,EAAE;MACVC,YAAY,EAAE;QACZC,OAAO,EAAEC,GAAG,CAACC,OAAO,CAAC,yBAAyB,CAAC,CAACF,OAAO;QACvDG,MAAM,EAAEF,GAAG,CAACC,OAAO,CAAC,8BAA8B;MACpD,CAAC;MACDN,UAAU,EAAE;QACVI,OAAO,EAAEC,GAAG,CAACC,OAAO,CAAC,yBAAyB,CAAC,CAACF,OAAO;QACvDG,MAAM,EAAEF,GAAG,CAACC,OAAO,CAAC,YAAY;MAClC;IACF;EACF,CAAC;EAED,MAAME,YAAY,GAAGb,cAAc,CAACO,UAAU,CAACC,YAAY,CAACI,MAAM;EAElE,MAAME,aAAa,GAAG,UAAUC,aAAa,EAAE;IAC7C,MAAMC,OAAO,GAAG,IAAIC,GAAG,CAACF,aAAa,CAAC;IAEtC,IAAIC,OAAO,CAACE,QAAQ,KAAK,OAAO,IAAIF,OAAO,CAACE,QAAQ,KAAK,QAAQ,EAAE;MACjE,MAAM,IAAIC,KAAK,CACb,+BAA+B,GAC7BJ,aAAa,GACb,6BAA6B,CAChC;IACH;IAEA,IAAIC,OAAO,CAACE,QAAQ,KAAK,OAAO,IAAIF,OAAO,CAACI,IAAI,KAAK,KAAK,EAAE;MAC1DlB,GAAG,CAACmB,KAAK,CACP,sCAAsC,GACpC,yDAAyD,GACzD,yCAAyC,CAC5C;IACH;;IAEA;IACA,IAAI,CAACL,OAAO,CAACM,KAAK,EAAE;MAClBN,OAAO,CAACM,KAAK,GAAG,CAAC,CAAC;IACpB;IAEA,IAAI,CAACN,OAAO,CAACM,KAAK,CAACC,IAAI,EAAE;MACvBP,OAAO,CAACM,KAAK,CAACC,IAAI,GAAG,MAAM;IAC7B;IAEA,MAAMC,SAAS,GAAGnB,UAAU,CAACoB,eAAe,CAACrB,GAAG,CAACsB,MAAM,CAACV,OAAO,CAAC,CAAC;IAEjEQ,SAAS,CAACG,aAAa,GAAG1B,MAAM,CAAC2B,SAAS,CAACJ,SAAS,CAACK,QAAQ,EAAEL,SAAS,CAAC;IACzE,OAAOA,SAAS;EAClB,CAAC;;EAED;EACA,MAAMM,mBAAmB,GAAG,YAAiD;IAAA,IAAvCC,QAAQ,uEAAGC,SAAS;IAAA,IAAE5B,GAAG,uEAAG4B,SAAS;IACzE,IAAIC,OAAO,EAAEC,IAAI,EAAEC,QAAQ;IAE3B,MAAMC,WAAW,GAAGL,QAAQ,IAAIM,MAAM,CAACC,IAAI,CAACP,QAAQ,CAAC,CAACQ,MAAM;IAE5D,IAAInC,GAAG,IAAI,CAACgC,WAAW,EAAE;MACvB,IAAII,IAAI,GAAGpC,GAAG,CAACqC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC5B,MAAMC,SAAS,GAAG,IAAIzB,GAAG,CAACb,GAAG,CAAC;MAC9B,IAAIoC,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,OAAO,EAAE;QACvC;QACAA,IAAI,GAAGE,SAAS,CAACC,QAAQ;QACzBT,IAAI,GAAGQ,SAAS,CAACE,QAAQ;QACzBT,QAAQ,GAAGO,SAAS,CAACP,QAAQ;MAC/B,CAAC,MAAM,IAAIO,SAAS,CAACxB,QAAQ,IAAIwB,SAAS,CAACE,QAAQ,IAAIF,SAAS,CAACP,QAAQ,EAAE;QACzE;QACAK,IAAI,GAAGE,SAAS,CAACxB,QAAQ,CAACuB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACvCP,IAAI,GAAGQ,SAAS,CAACE,QAAQ;QACzBT,QAAQ,GAAGO,SAAS,CAACP,QAAQ;MAC/B,CAAC,MAAM;QAAA;QACL;QACA;QACA,MAAMU,IAAI,4BAAGH,SAAS,CAACI,QAAQ,CAACC,SAAS,CAAC,CAAC,CAAC,0DAA/B,sBAAiCN,KAAK,CAAC,GAAG,CAAC;QACxDP,IAAI,GAAGW,IAAI,CAAC,CAAC,CAAC;QACd;QACA,MAAMG,KAAK,GAAGH,IAAI,CAAC,CAAC,CAAC,CAACJ,KAAK,CAAC,GAAG,CAAC;QAChCN,QAAQ,GAAGa,KAAK,CAAC,CAAC,CAAC;QACnBR,IAAI,GAAGQ,KAAK,CAAC,CAAC,CAAC;MACjB;MACAf,OAAO,GAAGO,IAAI;IAChB;IAEA,IAAI,CAAClC,QAAQ,CAAC,CAAAyB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,OAAO,KAAIA,OAAO,CAAC,EAAE;MAC3C,MAAM,IAAId,KAAK,CACb,qIAAqI,CACtI;IACH;IAEA,MAAMK,SAAS,GAAGnB,UAAU,CAACoB,eAAe,CAAC;MAC3CQ,OAAO,EAAE,CAAAF,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,OAAO,KAAIA,OAAO;MACrCgB,IAAI,EAAE;QACJf,IAAI,EAAE,CAAAH,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEG,IAAI,KAAIA,IAAI;QAC5BgB,IAAI,EAAE,CAAAnB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEI,QAAQ,KAAIA;MAC9B;IACF,CAAC,CAAC;IAEFX,SAAS,CAACG,aAAa,GAAG1B,MAAM,CAAC2B,SAAS,CAACJ,SAAS,CAACK,QAAQ,EAAEL,SAAS,CAAC;IACzE,OAAOA,SAAS;EAClB,CAAC;EACDzB,SAAS,CAACoD,kBAAkB,GAAGrB,mBAAmB;EAElD,MAAMsB,YAAY,GAAG,YAAY;IAAA;IAC/B,MAAMC,eAAe,GAAG,0BAAApD,MAAM,CAAC8B,QAAQ,CAACuB,QAAQ,0DAAxB,sBAA0BC,KAAK,KAAI,CAAC,CAAC;IAC7D;IACA;IACA;IACA,MAAMnD,GAAG,GAAGoD,OAAO,CAACC,GAAG,CAACC,QAAQ;IAChC,IACE,IAAI,CAACC,QAAQ,KAAK3B,SAAS,IAC3B,IAAI,CAAC2B,QAAQ,KAAKvD,GAAG,IACrB,IAAI,CAACuD,QAAQ,KAAKN,eAAe,CAACpB,OAAO,IACzC,IAAI,CAAC0B,QAAQ,KAAK,UAAU,EAC5B;MACA,IACGN,eAAe,CAACpB,OAAO,IAAI3B,QAAQ,CAAC+C,eAAe,CAACpB,OAAO,CAAC,IAC5D7B,GAAG,IAAIE,QAAQ,CAAC,IAAIW,GAAG,CAACb,GAAG,CAAC,CAACuC,QAAQ,CAAE,IACxCrC,QAAQ,CAAC,CAAAF,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEqC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAI,EAAE,CAAC,EAClC;QACA,IAAI,CAACkB,QAAQ,GAAGN,eAAe,CAACpB,OAAO,IAAI,UAAU;QACrD,IAAI,CAAC2B,KAAK,GAAG9B,mBAAmB,CAACuB,eAAe,EAAEjD,GAAG,CAAC;MACxD,CAAC,MAAM;QACL,IAAI,CAACuD,QAAQ,GAAGvD,GAAG;QACnB,IAAI,CAACwD,KAAK,GAAGxD,GAAG,GAAGU,aAAa,CAACV,GAAG,EAAEiD,eAAe,CAAC,GAAG,IAAI;MAC/D;IACF;IACA,OAAO,IAAI,CAACO,KAAK;EACnB,CAAC;EAED,IAAIC,iBAAiB,GAAG,CAAC;EAEzB9D,SAAS,CAAC+D,2BAA2B,GAAG,YAAY;IAClD,OAAOD,iBAAiB,EAAE;EAC5B,CAAC;;EAED;EACA9D,SAAS,CAACgE,sBAAsB,GAAG,YAAY;IAC7CF,iBAAiB,GAAG,CAAC;EACvB,CAAC;EAED,MAAMG,gBAAgB,GAAG,UAAUC,IAAI,EAAEC,OAAO,EAAE;IAChD,MAAMC,MAAM,GAAG,CAAAD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,MAAM,KAAIX,OAAO,CAACY,MAAM;IAChD,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,IAAIC,aAAa,GAAGzE,SAAS,CAAC+D,2BAA2B,EAAE;;MAE3D;MACA,MAAMW,MAAM,GAAG,CAAC,qBAAqB,GAAGD,aAAa,GAAG,WAAW,CAAC;MACpEC,MAAM,CAACC,IAAI,CACT,sDAAsD,GACtD,0BAA0B,CAC3B;MACD,MAAMC,UAAU,GAAG,IAAI9D,YAAY,CAACoD,IAAI,CAAC,CAACW,OAAO,EAAE,CAACC,gBAAgB,EAAE;MACtEF,UAAU,CAACG,EAAE,CAAC,MAAM,EAAEC,MAAM,IAAI;QAC9BN,MAAM,CAACC,IAAI,CAACK,MAAM,CAACC,QAAQ,EAAE,CAAC;MAChC,CAAC,CAAC;MACFL,UAAU,CAACG,EAAE,CAAC,KAAK,EAAE,YAAY;QAC/BL,MAAM,CAACC,IAAI,CAAC,mBAAmB,GAAGF,aAAa,GAAG,WAAW,CAAC;QAC9DL,MAAM,CAACc,KAAK,CAACR,MAAM,CAACS,IAAI,CAAC,EAAE,CAAC,EAAE,MAAMZ,OAAO,EAAE,CAAC;MAChD,CAAC,CAAC;MACFK,UAAU,CAACG,EAAE,CAAC,OAAO,EAAGK,GAAG,IAAKZ,MAAM,CAACY,GAAG,CAAC,CAAC;IAC9C,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,QAAQ,GAAG,UAAU5D,SAAS,EAAEyC,IAAI,EAAE;IAC1CzC,SAAS,CAACG,aAAa,CAACsC,IAAI,CAAC;EAC/B,CAAC;EAED,MAAMoB,SAAS,GAAG,IAAIlF,IAAI,EAAE;;EAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAL,KAAK,CAACwF,QAAQ,GAAG,UAAUC,CAAC,EAAE;IAC5B,OAAOF,SAAS,CAACG,QAAQ,CAACD,CAAC,CAAC;EAC9B,CAAC;;EAED;AACA;AACA;AACA;AACA;AACA;AACA;EACAzF,KAAK,CAAC2F,eAAe,GAAGzD,SAAS;;EAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAlC,KAAK,CAAC4F,IAAI,GAAG,UAAUxB,OAAO,EAAE;IAC9B,IAAIpE,KAAK,CAAC2F,eAAe,EAAE;MAAA;MACzB;MACA,MAAMlC,KAAK,GAAGW,OAAO,CAACyB,YAAY,GAAGzB,OAAO,CAACyB,YAAY,CAAC1B,IAAI,GAAGC,OAAO;MACxE,IAAIwB,IAAI,GAAG,IAAI;MACfL,SAAS,CAACO,OAAO,CAAEC,IAAI,IAAK;QAC1BH,IAAI,GAAGG,IAAI,CAACtC,KAAK,CAAC;QAClB,OAAOmC,IAAI;MACb,CAAC,CAAC;MACF,IAAI,CAACA,IAAI,EAAE;QACT;MACF;MACA,MAAMrC,eAAe,GAAG,2BAAApD,MAAM,CAAC8B,QAAQ,CAACuB,QAAQ,2DAAxB,uBAA0BC,KAAK,KAAI,CAAC,CAAC;MAC7DzD,KAAK,CAAC2F,eAAe;QAAGpC;MAAe,GAAKE,KAAK,EAAG;MACpD;IACF;IACA;IACA,OAAOc,OAAO,CAACyB,KAAK,CAAChG,KAAK,CAACiG,SAAS,CAAC7B,OAAO,CAAC,CAAC;EAChD,CAAC;;EAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACApE,KAAK,CAACiG,SAAS,GAAG,UAAgB7B,OAAO;IAAA,gCAAE;MAAA;MAEzC,MAAMX,KAAK,GAAGW,OAAO,CAACyB,YAAY,GAAGzB,OAAO,CAACyB,YAAY,CAAC1B,IAAI,GAAGC,OAAO;MAExE,IAAIwB,IAAI,GAAG,IAAI;MACfL,SAAS,CAACO,OAAO,CAAEC,IAAI,IAAK;QAC1BH,IAAI,GAAGG,IAAI,CAACtC,KAAK,CAAC;QAClB,OAAOmC,IAAI;MACb,CAAC,CAAC;MACF,IAAI,CAACA,IAAI,EAAE;QACT;MACF;MAEA,IAAI5F,KAAK,CAAC2F,eAAe,EAAE;QAAA;QACzB,MAAMpC,eAAe,GAAG,2BAAApD,MAAM,CAAC8B,QAAQ,CAACuB,QAAQ,2DAAxB,uBAA0BC,KAAK,KAAI,CAAC,CAAC;QAC7D,OAAOzD,KAAK,CAAC2F,eAAe;UAAGpC;QAAe,GAAKE,KAAK,EAAG;MAC7D;MAEA,MAAMyC,UAAU,GAAGxC,OAAO,CAACC,GAAG,CAACC,QAAQ;MACvC,MAAMuC,eAAe,6BAAGhG,MAAM,CAAC8B,QAAQ,CAACuB,QAAQ,2DAAxB,uBAA0BC,KAAK;MAEvD,IAAItD,MAAM,CAACiG,YAAY,IAAI,CAACF,UAAU,IAAI,CAACC,eAAe,EAAE;QAC1D;QACA;QACA,MAAM,IAAI9E,KAAK,CACb,4LAA4L,CAC7L;MACH;MAEA,IAAI6E,UAAU,IAAIC,eAAe,EAAE;QACjC,MAAMzE,SAAS,GAAG4B,YAAY,EAAE;QAChCgC,QAAQ,CAAC5D,SAAS,EAAE+B,KAAK,CAAC;QAC1B;MACF;MACA,OAAOS,gBAAgB,CAACT,KAAK,EAAEW,OAAO,CAAC;IACzC,CAAC;EAAA;AAAC,qB","file":"/packages/email.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Log } from 'meteor/logging';\nimport { Hook } from 'meteor/callback-hook';\n\nimport url from 'url';\nimport nodemailer from 'nodemailer';\nimport wellKnow from 'nodemailer/lib/well-known';\n\nexport const Email = {};\nexport const EmailTest = {};\n\nexport const EmailInternals = {\n  NpmModules: {\n    mailcomposer: {\n      version: Npm.require('nodemailer/package.json').version,\n      module: Npm.require('nodemailer/lib/mail-composer'),\n    },\n    nodemailer: {\n      version: Npm.require('nodemailer/package.json').version,\n      module: Npm.require('nodemailer'),\n    },\n  },\n};\n\nconst MailComposer = EmailInternals.NpmModules.mailcomposer.module;\n\nconst makeTransport = function (mailUrlString) {\n  const mailUrl = new URL(mailUrlString);\n\n  if (mailUrl.protocol !== 'smtp:' && mailUrl.protocol !== 'smtps:') {\n    throw new Error(\n      'Email protocol in $MAIL_URL (' +\n        mailUrlString +\n        \") must be 'smtp' or 'smtps'\"\n    );\n  }\n\n  if (mailUrl.protocol === 'smtp:' && mailUrl.port === '465') {\n    Log.debug(\n      \"The $MAIL_URL is 'smtp://...:465'.  \" +\n        \"You probably want 'smtps://' (The 's' enables TLS/SSL) \" +\n        \"since '465' is typically a secure port.\"\n    );\n  }\n\n  // Allow overriding pool setting, but default to true.\n  if (!mailUrl.query) {\n    mailUrl.query = {};\n  }\n\n  if (!mailUrl.query.pool) {\n    mailUrl.query.pool = 'true';\n  }\n\n  const transport = nodemailer.createTransport(url.format(mailUrl));\n\n  transport._syncSendMail = Meteor.wrapAsync(transport.sendMail, transport);\n  return transport;\n};\n\n// More info: https://nodemailer.com/smtp/well-known/\nconst knownHostsTransport = function (settings = undefined, url = undefined) {\n  let service, user, password;\n\n  const hasSettings = settings && Object.keys(settings).length;\n\n  if (url && !hasSettings) {\n    let host = url.split(':')[0];\n    const urlObject = new URL(url);\n    if (host === 'http' || host === 'https') {\n      // Look to hostname for service\n      host = urlObject.hostname;\n      user = urlObject.username;\n      password = urlObject.password;\n    } else if (urlObject.protocol && urlObject.username && urlObject.password) {\n      // We have some data from urlObject\n      host = urlObject.protocol.split(':')[0];\n      user = urlObject.username;\n      password = urlObject.password;\n    } else {\n      // We need to disect the URL ourselves to get the data\n      // First get rid of the leading '//' and split to username and the rest\n      const temp = urlObject.pathname.substring(2)?.split(':');\n      user = temp[0];\n      // Now we split by '@' to get password and hostname\n      const temp2 = temp[1].split('@');\n      password = temp2[0];\n      host = temp2[1];\n    }\n    service = host;\n  }\n\n  if (!wellKnow(settings?.service || service)) {\n    throw new Error(\n      'Could not recognize e-mail service. See list at https://nodemailer.com/smtp/well-known/ for services that we can configure for you.'\n    );\n  }\n\n  const transport = nodemailer.createTransport({\n    service: settings?.service || service,\n    auth: {\n      user: settings?.user || user,\n      pass: settings?.password || password,\n    },\n  });\n\n  transport._syncSendMail = Meteor.wrapAsync(transport.sendMail, transport);\n  return transport;\n};\nEmailTest.knowHostsTransport = knownHostsTransport;\n\nconst getTransport = function () {\n  const packageSettings = Meteor.settings.packages?.email || {};\n  // We delay this check until the first call to Email.send, in case someone\n  // set process.env.MAIL_URL in startup code. Then we store in a cache until\n  // process.env.MAIL_URL changes.\n  const url = process.env.MAIL_URL;\n  if (\n    this.cacheKey === undefined ||\n    this.cacheKey !== url ||\n    this.cacheKey !== packageSettings.service ||\n    this.cacheKey !== 'settings'\n  ) {\n    if (\n      (packageSettings.service && wellKnow(packageSettings.service)) ||\n      (url && wellKnow(new URL(url).hostname)) ||\n      wellKnow(url?.split(':')[0] || '')\n    ) {\n      this.cacheKey = packageSettings.service || 'settings';\n      this.cache = knownHostsTransport(packageSettings, url);\n    } else {\n      this.cacheKey = url;\n      this.cache = url ? makeTransport(url, packageSettings) : null;\n    }\n  }\n  return this.cache;\n};\n\nlet nextDevModeMailId = 0;\n\nEmailTest._getAndIncNextDevModeMailId = function () {\n  return nextDevModeMailId++;\n};\n\n// Testing hooks\nEmailTest.resetNextDevModeMailId = function () {\n  nextDevModeMailId = 0;\n};\n\nconst devModeSendAsync = function (mail, options) {\n  const stream = options?.stream || process.stdout;\n  return new Promise((resolve, reject) => {\n    let devModeMailId = EmailTest._getAndIncNextDevModeMailId();\n\n    // This approach does not prevent other writers to stdout from interleaving.\n    const output = ['====== BEGIN MAIL #' + devModeMailId + ' ======\\n'];\n    output.push(\n      '(Mail not sent; to enable sending, set the MAIL_URL ' +\n      'environment variable.)\\n'\n    );\n    const readStream = new MailComposer(mail).compile().createReadStream();\n    readStream.on('data', buffer => {\n      output.push(buffer.toString());\n    });\n    readStream.on('end', function () {\n      output.push('====== END MAIL #' + devModeMailId + ' ======\\n');\n      stream.write(output.join(''), () => resolve());\n    });\n    readStream.on('error', (err) => reject(err));\n  });\n};\n\nconst smtpSend = function (transport, mail) {\n  transport._syncSendMail(mail);\n};\n\nconst sendHooks = new Hook();\n\n/**\n * @summary Hook that runs before email is sent.\n * @locus Server\n *\n * @param f {function} receives the arguments to Email.send and should return true to go\n * ahead and send the email (or at least, try subsequent hooks), or\n * false to skip sending.\n * @returns {{ stop: function, callback: function }}\n */\nEmail.hookSend = function (f) {\n  return sendHooks.register(f);\n};\n\n/**\n * @summary Overrides sending function with your own.\n * @locus Server\n * @since 2.2\n * @param f {function} function that will receive options from the send function and under `packageSettings` will\n * include the package settings from Meteor.settings.packages.email for your custom transport to access.\n */\nEmail.customTransport = undefined;\n\n/**\n * @summary Send an email. Throws an `Error` on failure to contact mail server\n * or if mail server returns an error. All fields should match\n * [RFC5322](http://tools.ietf.org/html/rfc5322) specification.\n *\n * If the `MAIL_URL` environment variable is set, actually sends the email.\n * Otherwise, prints the contents of the email to standard out.\n *\n * Note that this package is based on **nodemailer**, so make sure to refer to\n * [the documentation](http://nodemailer.com/)\n * when using the `attachments` or `mailComposer` options.\n *\n * @locus Server\n * @param {Object} options\n * @param {String} [options.from] \"From:\" address (required)\n * @param {String|String[]} options.to,cc,bcc,replyTo\n *   \"To:\", \"Cc:\", \"Bcc:\", and \"Reply-To:\" addresses\n * @param {String} [options.inReplyTo] Message-ID this message is replying to\n * @param {String|String[]} [options.references] Array (or space-separated string) of Message-IDs to refer to\n * @param {String} [options.messageId] Message-ID for this message; otherwise, will be set to a random value\n * @param {String} [options.subject]  \"Subject:\" line\n * @param {String} [options.text|html] Mail body (in plain text and/or HTML)\n * @param {String} [options.watchHtml] Mail body in HTML specific for Apple Watch\n * @param {String} [options.icalEvent] iCalendar event attachment\n * @param {Object} [options.headers] Dictionary of custom headers - e.g. `{ \"header name\": \"header value\" }`. To set an object under a header name, use `JSON.stringify` - e.g. `{ \"header name\": JSON.stringify({ tracking: { level: 'full' } }) }`.\n * @param {Object[]} [options.attachments] Array of attachment objects, as\n * described in the [nodemailer documentation](https://nodemailer.com/message/attachments/).\n * @param {MailComposer} [options.mailComposer] A [MailComposer](https://nodemailer.com/extras/mailcomposer/#e-mail-message-fields)\n * object representing the message to be sent.  Overrides all other options.\n * You can create a `MailComposer` object via\n * `new EmailInternals.NpmModules.mailcomposer.module`.\n */\nEmail.send = function (options) {\n  if (Email.customTransport) {\n    // Preserve current behavior\n    const email = options.mailComposer ? options.mailComposer.mail : options;\n    let send = true;\n    sendHooks.forEach((hook) => {\n      send = hook(email);\n      return send;\n    });\n    if (!send) {\n      return;\n    }\n    const packageSettings = Meteor.settings.packages?.email || {};\n    Email.customTransport({ packageSettings, ...email });\n    return;\n  }\n  // Using Fibers Promise.await\n  return Promise.await(Email.sendAsync(options));\n};\n\n/**\n * @summary Send an email with asyncronous method. Capture  Throws an `Error` on failure to contact mail server\n * or if mail server returns an error. All fields should match\n * [RFC5322](http://tools.ietf.org/html/rfc5322) specification.\n *\n * If the `MAIL_URL` environment variable is set, actually sends the email.\n * Otherwise, prints the contents of the email to standard out.\n *\n * Note that this package is based on **nodemailer**, so make sure to refer to\n * [the documentation](http://nodemailer.com/)\n * when using the `attachments` or `mailComposer` options.\n *\n * @locus Server\n * @return {Promise}\n * @param {Object} options\n * @param {String} [options.from] \"From:\" address (required)\n * @param {String|String[]} options.to,cc,bcc,replyTo\n *   \"To:\", \"Cc:\", \"Bcc:\", and \"Reply-To:\" addresses\n * @param {String} [options.inReplyTo] Message-ID this message is replying to\n * @param {String|String[]} [options.references] Array (or space-separated string) of Message-IDs to refer to\n * @param {String} [options.messageId] Message-ID for this message; otherwise, will be set to a random value\n * @param {String} [options.subject]  \"Subject:\" line\n * @param {String} [options.text|html] Mail body (in plain text and/or HTML)\n * @param {String} [options.watchHtml] Mail body in HTML specific for Apple Watch\n * @param {String} [options.icalEvent] iCalendar event attachment\n * @param {Object} [options.headers] Dictionary of custom headers - e.g. `{ \"header name\": \"header value\" }`. To set an object under a header name, use `JSON.stringify` - e.g. `{ \"header name\": JSON.stringify({ tracking: { level: 'full' } }) }`.\n * @param {Object[]} [options.attachments] Array of attachment objects, as\n * described in the [nodemailer documentation](https://nodemailer.com/message/attachments/).\n * @param {MailComposer} [options.mailComposer] A [MailComposer](https://nodemailer.com/extras/mailcomposer/#e-mail-message-fields)\n * object representing the message to be sent.  Overrides all other options.\n * You can create a `MailComposer` object via\n * `new EmailInternals.NpmModules.mailcomposer.module`.\n */\nEmail.sendAsync = async function (options) {\n\n  const email = options.mailComposer ? options.mailComposer.mail : options;\n\n  let send = true;\n  sendHooks.forEach((hook) => {\n    send = hook(email);\n    return send;\n  });\n  if (!send) {\n    return;\n  }\n\n  if (Email.customTransport) {\n    const packageSettings = Meteor.settings.packages?.email || {};\n    return Email.customTransport({ packageSettings, ...email });\n  }\n\n  const mailUrlEnv = process.env.MAIL_URL;\n  const mailUrlSettings = Meteor.settings.packages?.email;\n\n  if (Meteor.isProduction && !mailUrlEnv && !mailUrlSettings) {\n    // This check is mostly necessary when using the flag --production when running locally.\n    // And it works as a reminder to properly set the mail URL when running locally.\n    throw new Error(\n      'You have not provided a mail URL. You can provide it by using the environment variable MAIL_URL or your settings. You can read more about it here: https://docs.meteor.com/api/email.html.'\n    );\n  }\n\n  if (mailUrlEnv || mailUrlSettings) {\n    const transport = getTransport();\n    smtpSend(transport, email);\n    return;\n  }\n  return devModeSendAsync(email, options);\n};\n"]}